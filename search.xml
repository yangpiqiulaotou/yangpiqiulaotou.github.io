<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Centos记录所有用户登录和操作的详细日志</title>
    <url>/2021/01/20/Centos%E8%AE%B0%E5%BD%95%E6%89%80%E6%9C%89%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E5%92%8C%E6%93%8D%E4%BD%9C%E7%9A%84%E8%AF%A6%E7%BB%86%E6%97%A5%E5%BF%97/</url>
    <content><![CDATA[<h2 id="1、起因"><a href="#1、起因" class="headerlink" title="1、起因"></a>1、起因</h2><p>​        最近Linux服务器上一些文件被篡改，想追查已经查不到记录了，所以得想个办法记录下所有用户的操作记录。</p>
<p>​        一般大家通常会采用history来记录，但是history有个缺陷就是默认是1000行，当然你也可以vim /etc/profile将1000修改成1000000行，但是这只是比较笼统的做法，看不到详细的用户来源已经操作记录，比如来源ip地址、操作时间、操作用户等。</p>
<h2 id="2、环境准备"><a href="#2、环境准备" class="headerlink" title="2、环境准备"></a>2、环境准备</h2><figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">cat  <span class="hljs-regexp">/etc/</span>passwd              <span class="hljs-comment">#查看可以登录的用户</span><br>mkdir  -p  <span class="hljs-regexp">/var/</span>log<span class="hljs-regexp">/history/</span>admin           <span class="hljs-comment">#创建可登录用户的目录</span><br>chown  -R admin:admin  <span class="hljs-regexp">/var/</span>log<span class="hljs-regexp">/history/</span>admin         <span class="hljs-comment">#给各个用户赋予权限</span><br></code></pre></td></tr></table></figure>
<h2 id="3、自动记录脚本"><a href="#3、自动记录脚本" class="headerlink" title="3、自动记录脚本"></a>3、自动记录脚本</h2><p>在/etc/profile文件的末尾追加编写脚本如下：</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk"><span class="hljs-comment">#set user history</span><br>history<br>USER=`whoami`<br>USER_IP=`who -u am i <span class="hljs-number">2</span>&gt;<span class="hljs-regexp">/dev/</span>null| awk <span class="hljs-string">&#x27;&#123;print $NF&#125;&#x27;</span>|sed -e <span class="hljs-string">&#x27;s/[()]//g&#x27;</span>`<br><span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;$USER_IP&quot;</span> = <span class="hljs-string">&quot;&quot;</span> ]; then<br>    USER_IP=`hostname`<br>fi<br><span class="hljs-keyword">if</span> [ ! -d <span class="hljs-regexp">/var/</span>log/history ]; then<br>    mkdir <span class="hljs-regexp">/var/</span>log/history<br>    chmod <span class="hljs-number">777</span> <span class="hljs-regexp">/var/</span>log/history<br>fi<br><span class="hljs-keyword">if</span> [ ! -d <span class="hljs-regexp">/var/</span>log<span class="hljs-regexp">/history/</span><span class="hljs-variable">$&#123;LOGNAME&#125;</span> ]; then<br>    mkdir <span class="hljs-regexp">/var/</span>log<span class="hljs-regexp">/history/</span><span class="hljs-variable">$&#123;LOGNAME&#125;</span><br>    chown -R <span class="hljs-variable">$&#123;LOGNAME&#125;</span>:<span class="hljs-variable">$&#123;LOGNAME&#125;</span> <span class="hljs-regexp">/var/</span>log<span class="hljs-regexp">/history/</span><span class="hljs-variable">$&#123;LOGNAME&#125;</span><br>    chmod <span class="hljs-number">770</span> <span class="hljs-regexp">/var/</span>log<span class="hljs-regexp">/history/</span><span class="hljs-variable">$&#123;LOGNAME&#125;</span><br>fi<br>export HISTSIZE=<span class="hljs-number">4096</span><br>DT=`date +<span class="hljs-string">&quot;%Y%m%d_%H:%M:%S&quot;</span>`<br>export HISTFILE=<span class="hljs-string">&quot;/var/log/history/$&#123;LOGNAME&#125;/$&#123;USER&#125;@$&#123;USER_IP&#125;_$DT&quot;</span><br>chmod <span class="hljs-number">660</span> <span class="hljs-regexp">/var/</span>log<span class="hljs-regexp">/history/</span><span class="hljs-variable">$&#123;LOGNAME&#125;</span><span class="hljs-regexp">/*history* 2&gt;/</span>dev/null<br></code></pre></td></tr></table></figure>
<p>最后刷新配置</p>
<figure class="highlight gradle"><table><tr><td class="code"><pre><code class="hljs gradle"><span class="hljs-keyword">source</span>   <span class="hljs-regexp">/etc/</span>profile<br></code></pre></td></tr></table></figure>
<p>而每次用户登录到退出都会产生以用户名、登录ip地址、操作时间为文件名的文件，文件里面包含本次用户的所有操作记录。</p>
<p>参考文章：<a href="https://www.cnblogs.com/harlanzhang/p/10273379.html">https://www.cnblogs.com/harlanzhang/p/10273379.html</a></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS7安装PostgreSQL12</title>
    <url>/2021/01/05/CentOS7%E5%AE%89%E8%A3%85PostgreSQL12/</url>
    <content><![CDATA[<h3 id="1、进入官网下载所需版本"><a href="#1、进入官网下载所需版本" class="headerlink" title="1、进入官网下载所需版本"></a>1、进入官网下载所需版本</h3><p><a href="https://www.postgresql.org/download/linux/redhat/">https://www.postgresql.org/download/linux/redhat/</a></p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20200303095053134.png" alt="image-20200303095053134"></p>
<h3 id="2、开始安装"><a href="#2、开始安装" class="headerlink" title="2、开始安装"></a>2、开始安装</h3><figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">yum install https:<span class="hljs-regexp">//</span>download.postgresql.org<span class="hljs-regexp">/pub/</span>repos<span class="hljs-regexp">/yum/</span>reporpms<span class="hljs-regexp">/EL-7-x86_64/</span>pgdg-redhat-repo-latest.noarch.rpm -y<br></code></pre></td></tr></table></figure>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20200303095233768.png" alt="image-20200303095233768"></p>
<figure class="highlight apache"><table><tr><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">yum</span> install postgresql<span class="hljs-number">12</span> -y<br><span class="hljs-attribute">yum</span> install postgresql<span class="hljs-number">12</span>-server -y<br></code></pre></td></tr></table></figure>
<h3 id="3、数据库初始化与设置自启动"><a href="#3、数据库初始化与设置自启动" class="headerlink" title="3、数据库初始化与设置自启动"></a>3、数据库初始化与设置自启动</h3><figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/usr/</span>pgsql-<span class="hljs-number">12</span><span class="hljs-regexp">/bin/</span>postgresql-<span class="hljs-number">12</span>-setup initdb<br>systemctl enable postgresql-<span class="hljs-number">12</span><br>systemctl start postgresql-<span class="hljs-number">12</span><br></code></pre></td></tr></table></figure>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20200303100416097.png" alt="image-20200303100416097"></p>
<p>​        这一步初始化数据库命令会在 /var/lib/pgsql 目录下创建名称为12文件夹，12为数据库版本。这里如果已经有对应版本的文件夹了，初始化这一步会报错，需要你自行去删除对应的文件夹，再去初始化。</p>
<h3 id="4、默认会创建一个名为postgres的linux登录用户，这里进行密码修改"><a href="#4、默认会创建一个名为postgres的linux登录用户，这里进行密码修改" class="headerlink" title="4、默认会创建一个名为postgres的linux登录用户，这里进行密码修改"></a>4、默认会创建一个名为postgres的linux登录用户，这里进行密码修改</h3><p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20200303100954704.png" alt="image-20200303100954704"></p>
<h3 id="5、修改配置文件"><a href="#5、修改配置文件" class="headerlink" title="5、修改配置文件"></a>5、修改配置文件</h3><p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20200303102201925.png" alt="image-20200303102201925"></p>
<h4 id="5-1修改postgresql-conf"><a href="#5-1修改postgresql-conf" class="headerlink" title="5.1修改postgresql.conf"></a>5.1修改postgresql.conf</h4><figure class="highlight autoit"><table><tr><td class="code"><pre><code class="hljs autoit">修改：<span class="hljs-meta">#listen_addresses = <span class="hljs-string">&#x27;localhost&#x27;</span>为listen_addresses = <span class="hljs-string">&#x27;*&#x27;</span></span><br></code></pre></td></tr></table></figure>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20200303102710321.png" alt="image-20200303102710321"></p>
<h4 id="5-2修改pg-hba-conf"><a href="#5-2修改pg-hba-conf" class="headerlink" title="5.2修改pg_hba.conf"></a>5.2修改pg_hba.conf</h4><p>修改前</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20200303103002192.png" alt="image-20200303103002192"></p>
<p>修改后</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20200303103124544.png" alt="image-20200303103124544"></p>
<p>并重新启动</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs undefined">systemctl restart postgresql-12<br></code></pre></td></tr></table></figure>
<h3 id="6、设置登录数据库账密"><a href="#6、设置登录数据库账密" class="headerlink" title="6、设置登录数据库账密"></a>6、设置登录数据库账密</h3><figure class="highlight csharp"><table><tr><td class="code"><pre><code class="hljs csharp">su postgres              <span class="hljs-meta">#不能使用root用户登录，切换到普通用户</span><br>psql -U postgres<br>\password                <span class="hljs-meta">#设置用户密码</span><br><span class="hljs-function"><span class="hljs-keyword">select</span> <span class="hljs-title">version</span>(<span class="hljs-params"></span>)</span>;        <span class="hljs-meta">#查看版本</span><br></code></pre></td></tr></table></figure>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20200303104354374.png" alt="image-20200303104354374"></p>
<h3 id="7、登录并测试数据库连接"><a href="#7、登录并测试数据库连接" class="headerlink" title="7、登录并测试数据库连接"></a>7、登录并测试数据库连接</h3><p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20200303105037116.png" alt="image-20200303105037116"></p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20200303105103983.png" alt="image-20200303105103983"></p>
<p>参考文章：<a href="https://www.jianshu.com/p/b4a759c2208f">https://www.jianshu.com/p/b4a759c2208f</a></p>
]]></content>
      <categories>
        <category>关系型数据库</category>
      </categories>
      <tags>
        <tag>PostgreSQL</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo自定义域名</title>
    <url>/2020/12/30/Hexo%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9F%9F%E5%90%8D/</url>
    <content><![CDATA[<h2 id="阿里云购买域名"><a href="#阿里云购买域名" class="headerlink" title="阿里云购买域名"></a>阿里云购买域名</h2><p>购买地址: <a href="https://wanwang.aliyun.com/domain/searchresult/#/?keyword=&amp;suffix=com">https://wanwang.aliyun.com/domain/searchresult/#/?keyword=&amp;suffix=com</a></p>
<h3 id="通过CNAME解析"><a href="#通过CNAME解析" class="headerlink" title="通过CNAME解析"></a>通过CNAME解析</h3><p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20201230094445258.png" alt="image-20201230094445258"></p>
<p>登录github仓库，在根目录下创建CNAME文件</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20201230094345833.png" alt="image-20201230094345833"></p>
<h2 id="Github配置HTTPS"><a href="#Github配置HTTPS" class="headerlink" title="Github配置HTTPS"></a>Github配置HTTPS</h2><p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20201230091906008.png" alt="image-20201230091906008"></p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20201230094113159.png" alt="image-20201230094113159"></p>
<h3 id="登录域名界面"><a href="#登录域名界面" class="headerlink" title="登录域名界面"></a>登录域名界面</h3><p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20201230095210959.png" alt="image-20201230095210959"></p>
<p>修改网站标题blog/_config.yml</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td><code>title</code></td>
<td>网站标题</td>
</tr>
<tr>
<td><code>subtitle</code></td>
<td>网站副标题</td>
</tr>
<tr>
<td><code>description</code></td>
<td>网站描述</td>
</tr>
<tr>
<td><code>keywords</code></td>
<td>网站的关键词。支援多个关键词。</td>
</tr>
<tr>
<td><code>author</code></td>
<td>您的名字</td>
</tr>
<tr>
<td><code>language</code></td>
<td>网站使用的语言。对于简体中文用户来说，使用不同的主题可能需要设置成不同的值，请参考你的主题的文档自行设置，常见的有 <code>zh-Hans</code>和 <code>zh-CN</code>。</td>
</tr>
<tr>
<td><code>timezone</code></td>
<td>网站时区。Hexo 默认使用您电脑的时区。请参考 <a href="https://en.wikipedia.org/wiki/List_of_tz_database_time_zones">时区列表</a> 进行设置，如 <code>America/New_York</code>, <code>Japan</code>, 和 <code>UTC</code> 。一般的，对于中国大陆地区可以使用 <code>Asia/Shanghai</code>。</td>
</tr>
</tbody></table>
<h3 id="部署到github"><a href="#部署到github" class="headerlink" title="部署到github"></a>部署到github</h3><p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20201230111015211.png" alt="image-20201230111015211"></p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo集成Valine评论系统</title>
    <url>/2020/12/30/Hexo%E9%9B%86%E6%88%90Valine%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<h2 id="注册Leancloud"><a href="#注册Leancloud" class="headerlink" title="注册Leancloud"></a>注册Leancloud</h2><p>评论系统其实是放在Leancloud上的，因此首先需要去注册一个账号</p>
<p>官网：<a href="https://leancloud.cn/">https://leancloud.cn/</a></p>
<p>认证完成后创建应用</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20201230150742969.png" alt="image-20201230150742969"></p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20201230150811967.png" alt="image-20201230150811967"></p>
<p>点击设置获取appid 和 appkey</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20201230150940084.png" alt="image-20201230150940084"></p>
<h2 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h2><p>打开主题配置文件 搜索 valine，填入appid 和 appkey</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">valine:</span><br>  <span class="hljs-attr">appid:</span>  <span class="hljs-comment"># 从 LeanCloud 的应用中得到的 appId</span><br>  <span class="hljs-attr">appkey:</span>  <span class="hljs-comment"># 从 LeanCloud 的应用中得到的 APP Key</span><br>  <span class="hljs-attr">placeholder:</span> <span class="hljs-string">吐槽</span> <span class="hljs-comment"># 评论框占位提示符</span><br>  <span class="hljs-attr">path:</span> <span class="hljs-string">window.location.pathname</span> <span class="hljs-comment"># 当前文章页路径，用于区分不同的文章页，以保证正确读取该文章页下的评论列表</span><br>  <span class="hljs-attr">avatar:</span> <span class="hljs-string">retro</span> <span class="hljs-comment"># Gravatar 头像展示方式</span><br>  <span class="hljs-attr">meta:</span> [<span class="hljs-string">&#x27;nick&#x27;</span>, <span class="hljs-string">&#x27;mail&#x27;</span>, <span class="hljs-string">&#x27;link&#x27;</span>]  <span class="hljs-comment"># 评论者相关属性</span><br>  <span class="hljs-attr">pageSize:</span> <span class="hljs-number">10</span> <span class="hljs-comment"># 评论列表分页，每页条数</span><br>  <span class="hljs-attr">lang:</span> <span class="hljs-string">zh-CN</span> <span class="hljs-comment"># zh-CN | zh-TW | en | ja</span><br>  <span class="hljs-attr">highlight:</span> <span class="hljs-literal">false</span> <span class="hljs-comment"># 代码高亮</span><br>  <span class="hljs-attr">recordIP:</span> <span class="hljs-literal">false</span> <span class="hljs-comment"># 是否记录评论者IP</span><br>  <span class="hljs-attr">serverURLs:</span>  <span class="hljs-comment"># REST API 服务器地址，国际版不填</span><br></code></pre></td></tr></table></figure>
<p>并修改评论插件为valine</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">comments:</span>  <span class="hljs-comment"># 评论</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span>  <span class="hljs-comment"># 开启评论</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">valine</span>  <span class="hljs-comment"># 指定使用的评论模块</span><br></code></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Jenkins主机之上部署SonarQube Scanner</title>
    <url>/2021/01/05/Jenkins%E4%B8%BB%E6%9C%BA%E4%B9%8B%E4%B8%8A%E9%83%A8%E7%BD%B2SonarQube-Scanner/</url>
    <content><![CDATA[<h3 id="1、在jenkins中安装插件：SonarQube-Scanner"><a href="#1、在jenkins中安装插件：SonarQube-Scanner" class="headerlink" title="1、在jenkins中安装插件：SonarQube Scanner"></a>1、在jenkins中安装插件：SonarQube Scanner</h3><p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20200303154952665.png" alt="image-20200303154952665"></p>
<h3 id="2、在jenkins主机之上安装-SonarQube-Scanner-部件，将其安装到jenkins用户之下"><a href="#2、在jenkins主机之上安装-SonarQube-Scanner-部件，将其安装到jenkins用户之下" class="headerlink" title="2、在jenkins主机之上安装 SonarQube Scanner 部件，将其安装到jenkins用户之下"></a>2、在jenkins主机之上安装 SonarQube Scanner 部件，将其安装到jenkins用户之下</h3><figure class="highlight vim"><table><tr><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">cd</span>  /usr/local<br>unzip sonar-scanner-cli-<span class="hljs-number">4.2</span>.<span class="hljs-number">0.1873</span>-linux.zip<br><span class="hljs-keyword">ln</span> -s sonar-scanner-<span class="hljs-number">4.2</span>.<span class="hljs-number">0.1873</span>-linux sonar-scanner<br>chown -R jenkin<span class="hljs-variable">s:</span> sonar-scanner-<span class="hljs-number">4.2</span>.<span class="hljs-number">0.1873</span>-linux<br><br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;export SONAR_SCANNER_HOME=/usr/local/sonar-scanner&#x27;</span>&gt;&gt;/etc/<span class="hljs-keyword">profile</span><br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;export PATH=$SONAR_SCANNER_HOME/bin:$PATH&#x27;</span>&gt;&gt;/etc/<span class="hljs-keyword">profile</span><br><span class="hljs-keyword">source</span> /etc/<span class="hljs-keyword">profile</span><br><br><span class="hljs-keyword">vim</span> <span class="hljs-keyword">conf</span>/sonar-scanner.properties<br></code></pre></td></tr></table></figure>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20200303155825904.png" alt="image-20200303155825904"></p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">sonar-scanner -h</span><br></code></pre></td></tr></table></figure>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20200303155945854.png" alt="image-20200303155945854"></p>
<h3 id="3、整合Jenkins和SonarQube："><a href="#3、整合Jenkins和SonarQube：" class="headerlink" title="3、整合Jenkins和SonarQube："></a>3、整合Jenkins和SonarQube：</h3><p>网页登录jenkins，系统管理，全局工具配置，SonarQube Scanner，将安装的sonar-scanner配置上去</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20200303170347797.png" alt="image-20200303170347797"></p>
<p>网页登录sonar创建token</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20200303170456840.png" alt="image-20200303170456840"></p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20200303170548345.png" alt="image-20200303170548345"></p>
<p>网页登录jenkins，凭据，jenkins，全局凭据，添加凭据，Secret text类型，将上一步的token填入</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/20191119155139175.png" alt="在这里插入图片描述"></p>
<p>网页登录jenkins，系统管理，系统设置，SonarQube servers，配置名字和url，选择上一步添加的凭据</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20200303171838307.png" alt="image-20200303171838307"></p>
<p>4、配置Jenkins任务</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20200305133622078.png" alt="image-20200305133622078"></p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20200305133650304.png" alt="image-20200305133650304"></p>
<ul>
<li>Task to run: 输入 scan，即分析代码；</li>
<li>JDK :选择 SonarQube Scanner 使用的 JDK（注意这里必须是 JDK 不能是 JRE）；</li>
<li>Path to project properties : 这里可以指定一个sonar-project.properties 文件，如果不指定的话会使用项目默认的 properties文件；</li>
<li>Analysis properties: 这里需要输入一些配置参数用来传递给 SonarQube，这里的参数优先级高于sonar-project.properties文件里面的参数，所以可以在这里来配置所有的参数以替代sonar-project.properties文件，下面列出了一些参数，sonar.language指定了要分析的开发语言（特定的开发语言对应了特定的规则），sonar.sources定义了需要分析的源代码位置（示例中的.所指示的是当前 Jenkins项目的目录），</li>
<li>sonar.java.binaries 定义了需要分析代码的编译后文件位置；</li>
<li>Additional arguments 输入框中可以输入一些附加的参数，示例中的-X 意思是进入SonarQube Scanner的Debug 模式，这样会输出更多的日志信息；</li>
<li>JVM Options 可以输入在执行 SonarQube Scanner是需要的JVM参数。</li>
</ul>
<p>5、测试构建</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20200305134512002.png" alt="image-20200305134512002"></p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20200305134441603.png" alt="image-20200305134441603"></p>
<p>构建项目时错误信息：Caused by: Please provide compiled classes of your project with sonar.java.binaries property，这个问题是sonar扫描的项目工程中没有找到相应的class文件</p>
<p>解决办法：在Analysis properties一项中，增加sonar.java.binaries的配置，这个路径是项目工程中，编译的.class文件的路径。</p>
<p>6、登录sonarqube查看</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20200305134927195.png" alt="image-20200305134927195"></p>
]]></content>
      <tags>
        <tag>Jenkins</tag>
        <tag>SonarQube</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux二进制软件包安装Mysql8主从复制</title>
    <url>/2021/01/05/Linux%E4%BA%8C%E8%BF%9B%E5%88%B6%E8%BD%AF%E4%BB%B6%E5%8C%85%E5%AE%89%E8%A3%85Mysql8%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/</url>
    <content><![CDATA[<h3 id="1、下载安装包"><a href="#1、下载安装包" class="headerlink" title="1、下载安装包"></a>1、下载安装包</h3><p>wget  <a href="https://cdn.mysql.com//Downloads/MySQL-8.0/mysql-8.0.18-el7-x86_64.tar.gz">https://cdn.mysql.com//Downloads/MySQL-8.0/mysql-8.0.18-el7-x86_64.tar.gz</a></p>
<h3 id="2、删除系统自带"><a href="#2、删除系统自带" class="headerlink" title="2、删除系统自带"></a>2、删除系统自带</h3><figure class="highlight apache"><table><tr><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">rpm</span> -qa |grep  mysql<br><span class="hljs-attribute">rpm</span> -qa |grep mariadb<br><span class="hljs-attribute">rpm</span> -e --nodeps mariadb-libs-<span class="hljs-number">5</span>.<span class="hljs-number">5</span>.<span class="hljs-number">60</span>-<span class="hljs-number">1</span>.el<span class="hljs-number">7</span>_<span class="hljs-number">5</span>.x<span class="hljs-number">86</span>_<span class="hljs-number">64</span><br></code></pre></td></tr></table></figure>
<h3 id="3、初始化数据库"><a href="#3、初始化数据库" class="headerlink" title="3、初始化数据库"></a>3、初始化数据库</h3><figure class="highlight apache"><table><tr><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">groupadd</span> mysql<br><span class="hljs-attribute">useradd</span> -r -g mysql -s /bin/false mysql<br><span class="hljs-attribute">cd</span> /usr/local<br><span class="hljs-attribute">tar</span> xvf mysql-<span class="hljs-number">8</span>.<span class="hljs-number">0</span>.<span class="hljs-number">18</span>-el<span class="hljs-number">7</span>-x<span class="hljs-number">86</span>_<span class="hljs-number">64</span>.tar.gz<br><span class="hljs-attribute">ln</span> -s mysql-<span class="hljs-number">8</span>.<span class="hljs-number">0</span>.<span class="hljs-number">18</span>-el<span class="hljs-number">7</span>-x<span class="hljs-number">86</span>_<span class="hljs-number">64</span> mysql<br><span class="hljs-attribute">cd</span> mysql<br><span class="hljs-attribute">mkdir</span> mysql-files<br><span class="hljs-attribute">chown</span> mysql:mysql mysql-files<br><span class="hljs-attribute">chmod</span> <span class="hljs-number">750</span> mysql-files<br><span class="hljs-attribute">bin</span>/mysqld --initialize --user=mysql<br><span class="hljs-attribute">bin</span>/mysql_ssl_rsa_setup<br><span class="hljs-attribute">bin</span>/mysqld_safe --user=mysql &amp;<br><span class="hljs-attribute">cp</span> support-files/mysql.server /etc/init.d/mysql.server<br></code></pre></td></tr></table></figure>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20191226160516781.png" alt="image-20191226160516781"></p>
<p>记住数据库的密码</p>
<h3 id="4、修改配置文件"><a href="#4、修改配置文件" class="headerlink" title="4、修改配置文件"></a>4、修改配置文件</h3><figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python">cat /etc/my.cnf<br><br>[mysqld]<br>log-<span class="hljs-built_in">bin</span>=master-<span class="hljs-built_in">bin</span>    <span class="hljs-comment">#master是master-bin，slave的是slave-bin</span><br>server-<span class="hljs-built_in">id</span>=<span class="hljs-number">1</span>           <span class="hljs-comment">#master为1，slave2</span><br><br><span class="hljs-comment">#关闭命令</span><br><span class="hljs-built_in">bin</span>/mysqladmin -u root -p  shutdown<br><span class="hljs-comment">#启动命令</span><br><span class="hljs-built_in">bin</span>/mysqld_safe --user=mysql &amp;<br></code></pre></td></tr></table></figure>
<h3 id="5、设置环境变量："><a href="#5、设置环境变量：" class="headerlink" title="5、设置环境变量："></a>5、设置环境变量：</h3><figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">cat  <span class="hljs-regexp">/etc/</span>profile.d/msyql.sh<br><br>MYSQL_HOME=<span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/mysql/</span><br>export PATH=<span class="hljs-variable">$PATH</span>:<span class="hljs-variable">$MYSQL_HOME</span>/bin<br></code></pre></td></tr></table></figure>
<h3 id="6、修改随机密码："><a href="#6、修改随机密码：" class="headerlink" title="6、修改随机密码："></a>6、修改随机密码：</h3><figure class="highlight crmsh"><table><tr><td class="code"><pre><code class="hljs crmsh">mysql  -u root  -p    <span class="hljs-comment">#输入初始化随机生成的密码</span><br>ALTER <span class="hljs-keyword">USER</span> <span class="hljs-title">&#x27;root</span>&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;hello123&#x27;;<br>show <span class="hljs-keyword">master</span> <span class="hljs-title">status</span>;      <span class="hljs-comment">#查看master状态</span><br></code></pre></td></tr></table></figure>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20191226161712968.png" alt="image-20191226161712968"></p>
<h3 id="7、为主从复制创建用户"><a href="#7、为主从复制创建用户" class="headerlink" title="7、为主从复制创建用户"></a>7、为主从复制创建用户</h3><figure class="highlight pgsql"><table><tr><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">USER</span> <span class="hljs-string">&#x27;econage&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span> IDENTIFIED <span class="hljs-keyword">BY</span> <span class="hljs-string">&#x27;hello123&#x27;</span>;<br><span class="hljs-keyword">GRANT</span> <span class="hljs-keyword">REPLICATION</span> SLAVE <span class="hljs-keyword">ON</span> *.* <span class="hljs-keyword">TO</span> econage@<span class="hljs-string">&#x27;%&#x27;</span>;<br></code></pre></td></tr></table></figure>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><code class="hljs pgsql">mysql8 之前的版本中加密规则是mysql_native_password,而在mysql8之后,加密规则是caching_sha2_password,把mysql用户登录密码加密规则还原成mysql_native_password. 不然会报错如下<br><br>error connecting <span class="hljs-keyword">to</span> master <span class="hljs-string">&#x27;econage@192.168.0.56:3306&#x27;</span> - retry-<span class="hljs-type">time</span>: <span class="hljs-number">60</span> retries: <span class="hljs-number">1</span> message: Authentication plugin <span class="hljs-string">&#x27;caching_sha2_password&#x27;</span> reported error: Authentication requires secure <span class="hljs-keyword">connection</span>.<br><br><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">USER</span> <span class="hljs-string">&#x27;econage&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span> IDENTIFIED <span class="hljs-keyword">WITH</span> mysql_native_password <span class="hljs-keyword">BY</span> <span class="hljs-string">&#x27;hello123&#x27;</span>;    #添加这一条命令即可<br><br>FLUSH <span class="hljs-keyword">PRIVILEGES</span>;<br></code></pre></td></tr></table></figure>
<p>如果禁用了二进制日志记录，请在创建用户后立即通过发出以下语句再次启用它：</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><code class="hljs routeros"><span class="hljs-builtin-name">SET</span> <span class="hljs-attribute">SQL_LOG_BIN</span>=1;<br></code></pre></td></tr></table></figure>
<h3 id="8、查看连接是否正确："><a href="#8、查看连接是否正确：" class="headerlink" title="8、查看连接是否正确："></a>8、查看连接是否正确：</h3><figure class="highlight apache"><table><tr><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">mysql</span>   -ueconage   -phello<span class="hljs-number">123</span>  -h<span class="hljs-number">192.168.0.56</span>   -e   &#x27;status;&#x27;<br></code></pre></td></tr></table></figure>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20191226172818003.png" alt="image-20191226172818003"></p>
<h3 id="9、在slave进行连接master："><a href="#9、在slave进行连接master：" class="headerlink" title="9、在slave进行连接master："></a>9、在slave进行连接master：</h3><figure class="highlight routeros"><table><tr><td class="code"><pre><code class="hljs routeros">CHANGE MASTER <span class="hljs-keyword">TO</span><br>  <span class="hljs-attribute">MASTER_HOST</span>=<span class="hljs-string">&#x27;192.168.0.56&#x27;</span>,           #master主机ip<br>  <span class="hljs-attribute">MASTER_USER</span>=<span class="hljs-string">&#x27;econage&#x27;</span>,  				#上面创建的用户<br>  <span class="hljs-attribute">MASTER_PASSWORD</span>=<span class="hljs-string">&#x27;hello123&#x27;</span>,			#用户密码<br>  <span class="hljs-attribute">MASTER_LOG_FILE</span>=<span class="hljs-string">&#x27;master-bin.000002&#x27;</span>,	#master的file文件名<br>  <span class="hljs-attribute">MASTER_LOG_POS</span>=474;					# master的Position号<br></code></pre></td></tr></table></figure>
<p>查看</p>
<figure class="highlight crmsh"><table><tr><td class="code"><pre><code class="hljs crmsh">show  <span class="hljs-literal">slave</span>  status\G      <span class="hljs-comment">#可能会状态不对，执行下面命令</span><br><span class="hljs-literal">stop</span>  <span class="hljs-literal">slave</span>；<br><span class="hljs-literal">start</span>  <span class="hljs-literal">slave</span>；<br></code></pre></td></tr></table></figure>
<p>再查看</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20191226201513037.png" alt="image-20191226201513037"></p>
<p>显示两个yes则正确。</p>
<h3 id="9、验证"><a href="#9、验证" class="headerlink" title="9、验证"></a>9、验证</h3><figure class="highlight gauss"><table><tr><td class="code"><pre><code class="hljs gauss"><span class="hljs-keyword">show</span>   databases；      <span class="hljs-meta">#分别在master和slave查看</span><br><span class="hljs-meta">#在master去创建一个库</span><br><span class="hljs-keyword">create</span>  database  hello   <span class="hljs-meta">#会发现slave上也有一个hello的库</span><br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>关系型数据库</category>
      </categories>
      <tags>
        <tag>Mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux安装elasticsearch</title>
    <url>/2021/01/20/Linux%E5%AE%89%E8%A3%85elasticsearch/</url>
    <content><![CDATA[<h2 id="1、准备Java环境"><a href="#1、准备Java环境" class="headerlink" title="1、准备Java环境"></a>1、准备Java环境</h2><figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">tar xvf jdk-<span class="hljs-number">8</span>u231-linux-x64.tar.gz -C <span class="hljs-regexp">/usr/</span>local/<br>mv jdk1.<span class="hljs-number">8.0</span>_231 java<br><br>vim <span class="hljs-regexp">/etc/</span>profile.d/java<br>export JAVA_HOME=<span class="hljs-regexp">/usr/</span>local/java<br>export PATH=<span class="hljs-variable">$JAVA_HOME</span>/bin:<span class="hljs-variable">$PATH</span><br><br>source <span class="hljs-regexp">/etc/</span>profile.d/java<br>java -version<br></code></pre></td></tr></table></figure>
<h2 id="2、安装es"><a href="#2、安装es" class="headerlink" title="2、安装es"></a>2、安装es</h2><h3 id="2-1-创建用户和数据存放目录"><a href="#2-1-创建用户和数据存放目录" class="headerlink" title="2.1 创建用户和数据存放目录"></a>2.1 创建用户和数据存放目录</h3><figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">useradd elk<br>passwd elk<br>mkdir <span class="hljs-regexp">/opt/</span>esdata<br>chown -R elk:elk <span class="hljs-regexp">/opt/</span><br></code></pre></td></tr></table></figure>
<h3 id="2-2配置系统参数"><a href="#2-2配置系统参数" class="headerlink" title="2.2配置系统参数"></a>2.2配置系统参数</h3><figure class="highlight apache"><table><tr><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">vim</span> /etc/security/limits.conf<br><br><span class="hljs-attribute">elk</span> hard nofile <span class="hljs-number">65536</span><br><span class="hljs-attribute">elk</span> soft nofile <span class="hljs-number">65536</span><br></code></pre></td></tr></table></figure>
<figure class="highlight vim"><table><tr><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">vim</span> /etc/sysctl.<span class="hljs-keyword">conf</span><br><br><span class="hljs-keyword">vm</span>.max_map_count = <span class="hljs-number">655360</span><br><br>sysctl -<span class="hljs-keyword">p</span><br></code></pre></td></tr></table></figure>
<h3 id="2-3安装es"><a href="#2-3安装es" class="headerlink" title="2.3安装es"></a>2.3安装es</h3><figure class="highlight css"><table><tr><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">tar</span> <span class="hljs-selector-tag">xvf</span> <span class="hljs-selector-tag">elasticsearch-6</span>.5.3<span class="hljs-selector-class">.tar</span><span class="hljs-selector-class">.gz</span> <span class="hljs-selector-tag">-C</span> /<span class="hljs-selector-tag">opt</span>/<br><br><span class="hljs-selector-tag">vim</span> <span class="hljs-selector-tag">jvm</span><span class="hljs-selector-class">.options</span><br><br><span class="hljs-selector-tag">-Xms8g</span><br><span class="hljs-selector-tag">-Xmx8g</span>     #实际内存的50%<br><br><span class="hljs-selector-tag">vim</span> <span class="hljs-selector-tag">elasticsearch</span><span class="hljs-selector-class">.yml</span><br><br><span class="hljs-selector-tag">cluster</span><span class="hljs-selector-class">.name</span>: <span class="hljs-selector-tag">elk</span>    #集群模式这里必须相同<br><span class="hljs-selector-tag">node</span><span class="hljs-selector-class">.name</span>: <span class="hljs-selector-tag">elk01</span><br># 自定义属性添加到节点上<br><span class="hljs-selector-tag">node</span><span class="hljs-selector-class">.attr</span><span class="hljs-selector-class">.rack</span>: <span class="hljs-selector-tag">r1</span><br><br><span class="hljs-selector-tag">node</span><span class="hljs-selector-class">.master</span>: <span class="hljs-selector-tag">true</span><br><span class="hljs-selector-id">#node</span><span class="hljs-selector-class">.voting_only</span>: <span class="hljs-selector-tag">true</span><br><span class="hljs-selector-tag">node</span><span class="hljs-selector-class">.data</span>: <span class="hljs-selector-tag">true</span><br><span class="hljs-selector-id">#node</span><span class="hljs-selector-class">.ingest</span>: <span class="hljs-selector-tag">true</span><br><span class="hljs-selector-id">#node</span><span class="hljs-selector-class">.ml</span>: <span class="hljs-selector-tag">false</span><br>#开启监控<span class="hljs-selector-tag">xpack</span><br><span class="hljs-selector-tag">xpack</span><span class="hljs-selector-class">.monitoring</span><span class="hljs-selector-class">.enabled</span>: <span class="hljs-selector-tag">true</span><br>#机器学习关闭<br><span class="hljs-selector-tag">xpack</span><span class="hljs-selector-class">.ml</span><span class="hljs-selector-class">.enabled</span>: <span class="hljs-selector-tag">false</span><br># 是否使用<span class="hljs-selector-tag">http</span>协议对外提供服务，默认为<span class="hljs-selector-tag">true</span>，开启<br><span class="hljs-selector-id">#http</span><span class="hljs-selector-class">.enabled</span>: <span class="hljs-selector-tag">true</span><br><br><span class="hljs-selector-tag">cluster</span><span class="hljs-selector-class">.remote</span><span class="hljs-selector-class">.connect</span>: <span class="hljs-selector-tag">false</span><br><span class="hljs-selector-tag">path</span><span class="hljs-selector-class">.data</span>: /<span class="hljs-selector-tag">data01</span>/<span class="hljs-selector-tag">elasticsearch</span>/<span class="hljs-selector-tag">lib</span><br><span class="hljs-selector-tag">path</span><span class="hljs-selector-class">.logs</span>: /<span class="hljs-selector-tag">data01</span>/<span class="hljs-selector-tag">elasticsearch</span>/<span class="hljs-selector-tag">logs</span><br>#锁定物理内存地址，防止<span class="hljs-selector-tag">es</span>内存被交换出去，也就是避免<span class="hljs-selector-tag">es</span>使用<span class="hljs-selector-tag">swap</span>交换分区，频繁的交换，会导致<span class="hljs-selector-tag">IOPS</span>变高<br><span class="hljs-selector-tag">bootstrap</span><span class="hljs-selector-class">.memory_lock</span>: <span class="hljs-selector-tag">true</span><br><span class="hljs-selector-tag">network</span><span class="hljs-selector-class">.host</span>: 192.168.88.128<br><span class="hljs-selector-tag">http</span><span class="hljs-selector-class">.port</span>: 9200<br>#<span class="hljs-selector-id">#discovery</span><span class="hljs-selector-class">.zen</span><span class="hljs-selector-class">.ping</span><span class="hljs-selector-class">.unicast</span><span class="hljs-selector-class">.hosts</span>旧版配置<br><span class="hljs-selector-tag">discovery</span><span class="hljs-selector-class">.seed_hosts</span>: <span class="hljs-selector-attr">[<span class="hljs-string">&quot;192.168.88.128&quot;</span>,<span class="hljs-string">&quot;192.168.99.92&quot;</span>,<span class="hljs-string">&quot;192.168.99.93&quot;</span>]</span><br><span class="hljs-selector-id">#Elasticsearch7</span>新增参数，写入候选主节点的设备地址，来开启服务时就可以被选为主节点<br><span class="hljs-selector-tag">cluster</span><span class="hljs-selector-class">.initial_master_nodes</span>: <span class="hljs-selector-attr">[<span class="hljs-string">&quot;192.168.88.128&quot;</span>,<span class="hljs-string">&quot;192.168.99.92&quot;</span>,<span class="hljs-string">&quot;192.168.99.93&quot;</span>]</span><br># 设置集群中<span class="hljs-selector-tag">N</span>个节点启动时进行数据恢复，默认为1。<br><span class="hljs-selector-tag">gateway</span><span class="hljs-selector-class">.recover_after_nodes</span>: 1<br>#设置是否可以通过正则或者_<span class="hljs-selector-tag">all</span>删除或者关闭索引<br><span class="hljs-selector-tag">action</span><span class="hljs-selector-class">.destructive_requires_name</span>: <span class="hljs-selector-tag">true</span><br><span class="hljs-selector-tag">discovery</span><span class="hljs-selector-class">.zen</span><span class="hljs-selector-class">.minimum_master_nodes</span>: 1   <span class="hljs-selector-id">#node</span><span class="hljs-selector-class">.master</span>数量/2+1<br><span class="hljs-selector-tag">indices</span><span class="hljs-selector-class">.fielddata</span><span class="hljs-selector-class">.cache</span><span class="hljs-selector-class">.size</span>: 20%     #内存回收机制<br><br><span class="hljs-selector-tag">network</span><span class="hljs-selector-class">.tcp</span><span class="hljs-selector-class">.no_delay</span>: <span class="hljs-selector-tag">true</span><br><span class="hljs-selector-tag">network</span><span class="hljs-selector-class">.tcp</span><span class="hljs-selector-class">.keep_alive</span>: <span class="hljs-selector-tag">true</span><br><span class="hljs-selector-tag">network</span><span class="hljs-selector-class">.tcp</span><span class="hljs-selector-class">.reuse_address</span>: <span class="hljs-selector-tag">true</span><br><span class="hljs-selector-tag">network</span><span class="hljs-selector-class">.tcp</span><span class="hljs-selector-class">.send_buffer_size</span>: 128<span class="hljs-selector-tag">mb</span><br><span class="hljs-selector-tag">network</span><span class="hljs-selector-class">.tcp</span><span class="hljs-selector-class">.receive_buffer_size</span>: 128<span class="hljs-selector-tag">mb</span><br><span class="hljs-selector-id">#transport</span><span class="hljs-selector-class">.tcp</span><span class="hljs-selector-class">.port</span>: 9301<br><span class="hljs-selector-tag">transport</span><span class="hljs-selector-class">.tcp</span><span class="hljs-selector-class">.compress</span>: <span class="hljs-selector-tag">true</span><br><span class="hljs-selector-tag">http</span><span class="hljs-selector-class">.max_content_length</span>: 200<span class="hljs-selector-tag">mb</span><br>#开启跨域访问<br><span class="hljs-selector-tag">http</span><span class="hljs-selector-class">.cors</span><span class="hljs-selector-class">.enabled</span>: <span class="hljs-selector-tag">true</span><br><span class="hljs-selector-tag">http</span><span class="hljs-selector-class">.cors</span><span class="hljs-selector-class">.allow-origin</span>: &quot;*&quot;<br><br><span class="hljs-selector-tag">cluster</span><span class="hljs-selector-class">.fault_detection</span><span class="hljs-selector-class">.leader_check</span><span class="hljs-selector-class">.interval</span>: 15<span class="hljs-selector-tag">s</span><br><span class="hljs-selector-tag">discovery</span><span class="hljs-selector-class">.cluster_formation_warning_timeout</span>: 30<span class="hljs-selector-tag">s</span><br><span class="hljs-selector-tag">cluster</span><span class="hljs-selector-class">.join</span><span class="hljs-selector-class">.timeout</span>: 120<span class="hljs-selector-tag">s</span><br><span class="hljs-selector-tag">cluster</span><span class="hljs-selector-class">.publish</span><span class="hljs-selector-class">.timeout</span>: 90<span class="hljs-selector-tag">s</span><br><span class="hljs-selector-tag">cluster</span><span class="hljs-selector-class">.routing</span><span class="hljs-selector-class">.allocation</span><span class="hljs-selector-class">.cluster_concurrent_rebalance</span>: 16<br><span class="hljs-selector-tag">cluster</span><span class="hljs-selector-class">.routing</span><span class="hljs-selector-class">.allocation</span><span class="hljs-selector-class">.node_concurrent_recoveries</span>: 16<br><span class="hljs-selector-tag">cluster</span><span class="hljs-selector-class">.routing</span><span class="hljs-selector-class">.allocation</span><span class="hljs-selector-class">.node_initial_primaries_recoveries</span>: 16<br><br><span class="hljs-selector-id">#6</span>/5新增<br><span class="hljs-selector-tag">thread_pool</span><span class="hljs-selector-class">.write</span><span class="hljs-selector-class">.size</span>: 5<br><span class="hljs-selector-tag">thread_pool</span><span class="hljs-selector-class">.write</span><span class="hljs-selector-class">.queue_size</span>: 400<br><span class="hljs-selector-tag">thread_pool</span><span class="hljs-selector-class">.search</span><span class="hljs-selector-class">.size</span>: 7<br><span class="hljs-selector-tag">thread_pool</span><span class="hljs-selector-class">.search</span><span class="hljs-selector-class">.queue_size</span>: 300<br><span class="hljs-selector-tag">thread_pool</span><span class="hljs-selector-class">.search</span><span class="hljs-selector-class">.min_queue_size</span>: 5<br><span class="hljs-selector-tag">thread_pool</span><span class="hljs-selector-class">.search</span><span class="hljs-selector-class">.max_queue_size</span>: 500<br><span class="hljs-selector-tag">thread_pool</span><span class="hljs-selector-class">.search</span><span class="hljs-selector-class">.auto_queue_frame_size</span>: 1000<br><span class="hljs-selector-tag">thread_pool</span><span class="hljs-selector-class">.search</span><span class="hljs-selector-class">.target_response_time</span>: 3<span class="hljs-selector-tag">s</span><br></code></pre></td></tr></table></figure>
<p>命令</p>
<figure class="highlight vala"><table><tr><td class="code"><pre><code class="hljs vala"><span class="hljs-meta">#调整index的merge过程的并发度</span><br>curl -H <span class="hljs-string">&quot;Content-Type: application/json&quot;</span> -XPUT <span class="hljs-string">&#x27;http://localhost:9200/_all/_settings?preserve_existing=true&#x27;</span> -d <span class="hljs-string">&#x27;&#123;&quot;index.merge.scheduler.max_thread_count&quot; : &quot;1&quot;&#125;&#x27;</span><br><br><span class="hljs-meta">#提高refresh的时间间隔，降低系统开销</span><br>curl -H <span class="hljs-string">&quot;Content-Type: application/json&quot;</span> -XPUT <span class="hljs-string">&#x27;http://localhost:9200/_all/_settings?preserve_existing=true&#x27;</span> -d <span class="hljs-string">&#x27;&#123;&quot;index.refresh_interval&quot; : &quot;30s&quot;&#125;&#x27;</span><br><br><span class="hljs-meta">#查看es集群状态</span><br>curl <span class="hljs-string">&#x27;http://localhost:9200/_cluster/health?pretty&#x27;</span><br><br><span class="hljs-meta">#查看es所有索引</span><br>curl <span class="hljs-string">&#x27;http://localhost:9200/_cat/indices?v&#x27;</span><br><br><br><span class="hljs-meta">#查看集群所在磁盘的分配状况</span><br>curl <span class="hljs-string">&#x27;http://127.0.0.1:9200/_cat/allocation?v&#x27;</span><br><span class="hljs-meta">#分片数（shards）:集群中各节点的分片数相同</span><br><span class="hljs-meta">#索引所占空间（disk.indices）:该节点中所有索引在该磁盘所点的空间。</span><br><span class="hljs-meta">#磁盘使用容量（disk.used）:已经使用空间</span><br><span class="hljs-meta">#磁盘可用容量（disk.avail）:可用空间</span><br><span class="hljs-meta">#磁盘总容量（disk.total）:总共容量</span><br><span class="hljs-meta">#磁盘便用率（disk.percent）:磁盘使用率</span><br><br><span class="hljs-meta">#查看节点信息</span><br>curl -XGET <span class="hljs-string">&quot;http://localhost:9200/_cat/nodes?v&amp;pretty&quot;</span><br><br><span class="hljs-meta">#查看分片信息</span><br>curl -XGET <span class="hljs-string">&quot;http://localhost:9200/_cat/shards?v&amp;pretty&quot;</span><br><br><span class="hljs-meta">#查看集群静态信息</span><br>curl -XGET <span class="hljs-string">&#x27;http://localhost:9200/_cluster/stats?pretty=true&#x27;</span><br><br><span class="hljs-meta">#删除索引</span><br>curl -XDELETE <span class="hljs-string">&#x27;http://localhost:9200/app-2019.05,app-2019.05&#x27;</span><br><br><span class="hljs-meta">#查询es当前线程</span><br>curl -XGET <span class="hljs-string">&#x27;http://localhost:9200/_nodes/stats/thread_pool?pretty&#x27;</span><br><br></code></pre></td></tr></table></figure>
<h2 id="3、-logstash调优"><a href="#3、-logstash调优" class="headerlink" title="3、 logstash调优"></a>3、 logstash调优</h2><p>​    当batch.size增大，es处理的事件数就会变少，写入也就越快了。具体的worker/output.workers数量建议等于CPU数，batch.size/batch.delay根据实际的数据量逐渐增大来测试最优值。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">pipeline</span><span class="hljs-selector-class">.workers</span>: 24<br><span class="hljs-selector-tag">pipeline</span><span class="hljs-selector-class">.output</span><span class="hljs-selector-class">.workers</span>: 24<br><span class="hljs-selector-tag">pipeline</span><span class="hljs-selector-class">.batch</span><span class="hljs-selector-class">.size</span>: 10000<br><span class="hljs-selector-tag">pipeline</span><span class="hljs-selector-class">.batch</span><span class="hljs-selector-class">.delay</span>: 10<br></code></pre></td></tr></table></figure>
<p>配置参考：<a href="https://www.iteye.com/blog/shihlei-2418651">https://www.iteye.com/blog/shihlei-2418651</a></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Elasticsearch</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux安装sonarqube8.2</title>
    <url>/2021/01/05/Linux%E5%AE%89%E8%A3%85sonarqube8-2/</url>
    <content><![CDATA[<p>社区版下载地址：<a href="https://www.sonarqube.org/downloads/">https://www.sonarqube.org/downloads/</a></p>
<p>环境介绍：（本文使用Oracle jdk 11.0.6，postgreSQL 12）</p>
<h3 id="1、解压缩包"><a href="#1、解压缩包" class="headerlink" title="1、解压缩包"></a>1、解压缩包</h3><figure class="highlight apache"><table><tr><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">unzip</span> sonarqube-<span class="hljs-number">8.2.0.329</span><span class="hljs-number">29</span>.zip<br></code></pre></td></tr></table></figure>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20200303112854371.png" alt="image-20200303112854371"></p>
<h3 id="2、创建postgreSQL用户"><a href="#2、创建postgreSQL用户" class="headerlink" title="2、创建postgreSQL用户"></a>2、创建postgreSQL用户</h3><p>安装完后会自动创建postgres用户 su - postgres切换进去</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><code class="hljs pgsql">psql                     #进入命令行模式<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">database</span> sonar；	#创建sonar数据库<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">user</span> sonar；	    #创建sonar用户<br><span class="hljs-keyword">alter</span> <span class="hljs-keyword">user</span> sonar <span class="hljs-keyword">with</span> <span class="hljs-keyword">password</span> <span class="hljs-string">&#x27;postgres&#x27;</span>;           #设置sonar用户密码(否则会导致连不上数据库)<br><span class="hljs-keyword">alter</span> <span class="hljs-keyword">role</span> sonar <span class="hljs-keyword">createdb</span>;<span class="hljs-keyword">alter</span> <span class="hljs-keyword">role</span> sonar <span class="hljs-keyword">superuser</span>;<span class="hljs-keyword">alter</span> <span class="hljs-keyword">role</span> sonar <span class="hljs-keyword">createrole</span>;    #给sonar授权<br><span class="hljs-keyword">alter</span> <span class="hljs-keyword">database</span> sonar <span class="hljs-keyword">owner</span> <span class="hljs-keyword">to</span> sonar；      #更改sonar数据库拥有者(这一步是必须的，否则会sonarqube会连接失败)<br><br>psql进入命令行模式 <br>\l查看数据库 <br>\du 查看用户<br></code></pre></td></tr></table></figure>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20200303115321618.png" alt="image-20200303115321618"></p>
<h3 id="3、修改系统配置"><a href="#3、修改系统配置" class="headerlink" title="3、修改系统配置"></a>3、修改系统配置</h3><figure class="highlight stata"><table><tr><td class="code"><pre><code class="hljs stata">1.不能用root起！<br>2.切换用户必须 <span class="hljs-keyword">su</span> - username <br>3.切换好用户千万别忘记给这个用户授权你的sonarQube根目录<br>4.更改一些系统配置<br></code></pre></td></tr></table></figure>
<p>根据需要执行下述命令以使内核参数符合sonar安装需求</p>
<p>#可以使用以下命令查看这些值：</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><code class="hljs vim">sysctl <span class="hljs-keyword">vm</span>.max_map_count <br>sysctl fs.<span class="hljs-keyword">file</span>-<span class="hljs-built_in">max</span> <br>ulimit -n <br></code></pre></td></tr></table></figure>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20200303120223176.png" alt="image-20200303120223176"></p>
<p>#可以通过以root身份运行以下命令来为当前会话动态设置：</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><code class="hljs routeros">sysctl -w vm.<span class="hljs-attribute">max_map_count</span>=262144<br>sysctl -w fs.<span class="hljs-attribute">file-max</span>=65536<br>ulimit -n 65536<br></code></pre></td></tr></table></figure>
<p>#为了更永久设置这些值，则必须修改/etc/sysctl.d/99-sonarqube.conf（或/etc/sysctl.conf文件）#文件末尾添加下述两行</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">vi</span> /etc/sysctl.<span class="hljs-keyword">conf</span><br><br><span class="hljs-keyword">vm</span>.max_map_count=<span class="hljs-number">262144</span><br>fs.<span class="hljs-keyword">file</span>-<span class="hljs-built_in">max</span>=<span class="hljs-number">65536</span><br></code></pre></td></tr></table></figure>
<p>#在/etc/profile文件末尾添加ulimit -n 65536</p>
<figure class="highlight gradle"><table><tr><td class="code"><pre><code class="hljs gradle">vi <span class="hljs-regexp">/etc/</span>profile<br><br>ulimit -n <span class="hljs-number">65536</span>           #保存后运行#<span class="hljs-keyword">source</span> <span class="hljs-regexp">/etc/</span>profile 使其生效<br><br><span class="hljs-keyword">source</span> <span class="hljs-regexp">/etc/</span>profile<br></code></pre></td></tr></table></figure>
<p>创建sonar用户</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">useradd sonar</span><br><span class="hljs-attribute">passwd sonar</span><br></code></pre></td></tr></table></figure>
<p>密码自己设置。</p>
<p>目录授权</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">chown -R sonar:sonar <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/sonarqube-8.2.0.32929/</span><br></code></pre></td></tr></table></figure>
<h3 id="4、设置对数据库的访问"><a href="#4、设置对数据库的访问" class="headerlink" title="4、设置对数据库的访问"></a>4、设置对数据库的访问</h3><figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">vim  <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/sonarqube-8.2.0.32929/</span>conf/sonar.properties<br></code></pre></td></tr></table></figure>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20200303134739877.png" alt="image-20200303134739877"></p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20200303151110546.png" alt="image-20200303151110546"></p>
<p>配置自己机器的IP跟端口，保存退出即可</p>
<h3 id="5、配置Elasticsearch存储路径"><a href="#5、配置Elasticsearch存储路径" class="headerlink" title="5、配置Elasticsearch存储路径"></a>5、配置Elasticsearch存储路径</h3><p>默认情况下，Elasticsearch数据存储在*$ SONARQUBE-HOME / data中*，但不建议将其用于生产实例。相反，您应该将此数据存储在其他位置，最好是在具有快速I / O的专用卷中。除了保持可接受的性能外，这样做还可以简化SonarQube的升级</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">vim <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/sonarqube-8.2.0.32929/</span>conf/sonar.properties<br></code></pre></td></tr></table></figure>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20200303141448981.png" alt="image-20200303141448981"></p>
<p>用于启动SonarQube的用户必须具有对这些目录的读写权限</p>
<figure class="highlight haskell"><table><tr><td class="code"><pre><code class="hljs haskell"><span class="hljs-title">mkdir</span> -p /<span class="hljs-class"><span class="hljs-keyword">data</span>/sonarqube/<span class="hljs-keyword">data</span></span><br><span class="hljs-title">mkdir</span> -p /<span class="hljs-class"><span class="hljs-keyword">data</span>/sonarqube/temp</span><br><span class="hljs-title">chown</span> -<span class="hljs-type">R</span> sonar:sonar /<span class="hljs-class"><span class="hljs-keyword">data</span>/</span><br></code></pre></td></tr></table></figure>
<h3 id="6、Sonar-Scanner扫描器安装及使用方法"><a href="#6、Sonar-Scanner扫描器安装及使用方法" class="headerlink" title="6、Sonar-Scanner扫描器安装及使用方法"></a>6、Sonar-Scanner扫描器安装及使用方法</h3><p>光弄SonarQube是没法扫描项目的，所以还需要装一下sonar-scanner</p>
<p>官方下载地址：<a href="https://docs.sonarqube.org/latest/analysis/scan/sonarscanner/">https://docs.sonarqube.org/latest/analysis/scan/sonarscanner/</a></p>
<figure class="highlight apache"><table><tr><td class="code"><pre><code class="hljs apache"><span class="hljs-comment">#丢到/usr/local/下面解压</span><br><span class="hljs-attribute">unzip</span> sonar-scanner-cli-<span class="hljs-number">4.2.0.187</span><span class="hljs-number">3</span>-linux.zip<br><span class="hljs-attribute">cd</span> sonar-scanner-<span class="hljs-number">4.2.0.187</span><span class="hljs-number">3</span>-linux/<br><br><span class="hljs-attribute">vim</span> conf/sonar-scanner.propertie          #改下配置<br></code></pre></td></tr></table></figure>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20200303135545387.png" alt="image-20200303135545387"></p>
<p>保存退出后，创建软连接，将sonar-scanner改为全局即可使用</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">ln -s <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/sonar-scanner-4.2.0.1873-linux/</span>bin<span class="hljs-regexp">/sonar-scanner /u</span>sr<span class="hljs-regexp">/bin/</span>sonar-scanner<br></code></pre></td></tr></table></figure>
<h3 id="7、启动服务"><a href="#7、启动服务" class="headerlink" title="7、启动服务"></a>7、启动服务</h3><figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">su - sonar 别忘了切用户<br><br>cd <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/sonarqube-8.2.0.32929/</span> <br>bin<span class="hljs-regexp">/linux-x86-64/</span>sonar.sh<br></code></pre></td></tr></table></figure>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20200303140123972.png" alt="image-20200303140123972"></p>
<p>访问web界面</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20200303151227710.png" alt="image-20200303151227710"></p>
<p>账户密码：admin/admin</p>
<p>安装中文版，然后点击从新启动</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/20191119153859725.png" alt="在这里插入图片描述"></p>
<p>参考文章：<a href="https://blog.csdn.net/qq_42207325/article/details/100998453">https://blog.csdn.net/qq_42207325/article/details/100998453</a></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>SonarQube</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux（centos）服务器环境通用优化</title>
    <url>/2021/01/05/Linux%EF%BC%88centos%EF%BC%89%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%8E%AF%E5%A2%83%E9%80%9A%E7%94%A8%E4%BC%98%E5%8C%96/</url>
    <content><![CDATA[<p>建议服务器内存在8G或以上</p>
<h3 id="1、内核参数优化"><a href="#1、内核参数优化" class="headerlink" title="1、内核参数优化"></a>1、内核参数优化</h3><h4 id="1）备份："><a href="#1）备份：" class="headerlink" title="1）备份："></a>1）备份：</h4><figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">cp <span class="hljs-regexp">/etc/</span>sysctl.conf <span class="hljs-regexp">/etc/</span>sysctl.conf.bak<br></code></pre></td></tr></table></figure>
<h4 id="2）添加内容："><a href="#2）添加内容：" class="headerlink" title="2）添加内容："></a>2）添加内容：</h4><figure class="highlight apache"><table><tr><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">vi</span>  /etc/sysctl.conf<br><span class="hljs-comment">#网络性能调优</span><br><span class="hljs-attribute">net</span>.ipv<span class="hljs-number">4</span>.tcp_syncookies = <span class="hljs-number">1</span><br><span class="hljs-attribute">net</span>.ipv<span class="hljs-number">4</span>.tcp_mem = <span class="hljs-number">131072</span>  <span class="hljs-number">262144</span>  <span class="hljs-number">524288</span><br><span class="hljs-attribute">net</span>.ipv<span class="hljs-number">4</span>.tcp_rmem = <span class="hljs-number">8760</span>  <span class="hljs-number">256960</span>  <span class="hljs-number">4088000</span><br><span class="hljs-attribute">net</span>.ipv<span class="hljs-number">4</span>.tcp_wmem = <span class="hljs-number">8760</span>  <span class="hljs-number">256960</span>  <span class="hljs-number">4088000</span><br><br><span class="hljs-comment">#TCP/IP调优参数</span><br><span class="hljs-attribute">net</span>.core.rmem_default = <span class="hljs-number">256960</span><br><span class="hljs-attribute">net</span>.core.rmem_max = <span class="hljs-number">513920</span><br><span class="hljs-attribute">net</span>.core.wmem_default = <span class="hljs-number">256960</span><br><span class="hljs-attribute">net</span>.core.wmem_max = <span class="hljs-number">513920</span><br><span class="hljs-attribute">net</span>.ipv<span class="hljs-number">4</span>.tcp_timestamps = <span class="hljs-number">0</span><br><span class="hljs-attribute">net</span>.ipv<span class="hljs-number">4</span>.tcp_sack = <span class="hljs-number">1</span><br><span class="hljs-attribute">net</span>.ipv<span class="hljs-number">4</span>.tcp_window_scaling = <span class="hljs-number">1</span><br><br><span class="hljs-comment">#常见内核参数调优</span><br><span class="hljs-attribute">net</span>.ipv<span class="hljs-number">4</span>.tcp_fin_timeout = <span class="hljs-number">30</span><br><span class="hljs-attribute">net</span>.ipv<span class="hljs-number">4</span>.tcp_tw_reuse = <span class="hljs-number">1</span><br><span class="hljs-attribute">net</span>.ipv<span class="hljs-number">4</span>.tcp_tw_recycle = <span class="hljs-number">1</span><br><span class="hljs-attribute">net</span>.ipv<span class="hljs-number">4</span>.tcp_keepalive_time = <span class="hljs-number">1400</span><br><span class="hljs-attribute">net</span>.ipv<span class="hljs-number">4</span>.ip_local_port_range = <span class="hljs-number">9000</span>    <span class="hljs-number">65000</span><br><span class="hljs-attribute">net</span>.ipv<span class="hljs-number">4</span>.tcp_max_syn_backlog = <span class="hljs-number">16384</span><br><span class="hljs-attribute">net</span>.ipv<span class="hljs-number">4</span>.tcp_max_tw_buckets = <span class="hljs-number">36000</span><br><span class="hljs-attribute">net</span>.ipv<span class="hljs-number">4</span>.route.gc_timeout = <span class="hljs-number">100</span><br><span class="hljs-attribute">net</span>.ipv<span class="hljs-number">4</span>.tcp_keepalive_intvl = <span class="hljs-number">30</span><br><span class="hljs-attribute">net</span>.ipv<span class="hljs-number">4</span>.tcp_keepalive_probes = <span class="hljs-number">3</span><br><span class="hljs-attribute">net</span>.ipv<span class="hljs-number">4</span>.tcp_syn_retries = <span class="hljs-number">1</span><br><span class="hljs-attribute">net</span>.ipv<span class="hljs-number">4</span>.tcp_synack_retries = <span class="hljs-number">1</span><br><span class="hljs-attribute">net</span>.core.somaxconn = <span class="hljs-number">16384</span><br><span class="hljs-attribute">net</span>.core.netdev_max_backlog = <span class="hljs-number">16384</span><br><span class="hljs-attribute">net</span>.ipv<span class="hljs-number">4</span>.tcp_max_orphans = <span class="hljs-number">16384</span><br><span class="hljs-comment">#内存单个段允许使用的大小，可以设置到总内存的90%</span><br><span class="hljs-comment">#例如16G内存16*1024*1024*1024*90%=15461882265</span><br><span class="hljs-comment">#shmall的大小可以是15461882265/4k(分页大小，getconf PAGESIZE可得到)= 3774873</span><br><span class="hljs-comment">#示例参数以8g内存作为标准</span><br><span class="hljs-attribute">kernel</span>.shmmax=<span class="hljs-number">7730941132</span><br><span class="hljs-attribute">kernel</span>.shmall=<span class="hljs-number">1887436</span><br><span class="hljs-attribute">kernel</span>.msgmax=<span class="hljs-number">65535</span><br><span class="hljs-attribute">kernel</span>.msgmnb=<span class="hljs-number">65535</span><br><span class="hljs-comment">#以下参数是对iptables防火墙的优化，防火墙不开会提示，可以忽略不理。</span><br><span class="hljs-attribute">net</span>.nf_conntrack_max = <span class="hljs-number">25000000</span><br><span class="hljs-attribute">net</span>.netfilter.nf_conntrack_max = <span class="hljs-number">25000000</span><br><span class="hljs-attribute">net</span>.netfilter.nf_conntrack_tcp_timeout_established = <span class="hljs-number">180</span><br><span class="hljs-attribute">net</span>.netfilter.nf_conntrack_tcp_timeout_time_wait = <span class="hljs-number">120</span><br><span class="hljs-attribute">net</span>.netfilter.nf_conntrack_tcp_timeout_close_wait = <span class="hljs-number">60</span><br><span class="hljs-attribute">net</span>.netfilter.nf_conntrack_tcp_timeout_fin_wait = <span class="hljs-number">120</span><br></code></pre></td></tr></table></figure>
<h4 id="3）生效配置："><a href="#3）生效配置：" class="headerlink" title="3）生效配置："></a>3）生效配置：</h4><figure class="highlight ebnf"><table><tr><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">sysctl -p</span><br></code></pre></td></tr></table></figure>
<h3 id="2、关闭透明大页"><a href="#2、关闭透明大页" class="headerlink" title="2、关闭透明大页"></a>2、关闭透明大页</h3><p>目前已知mysql、oracle、redis内存大页功能会产生性能影响</p>
<p>在/etc/rc.local中增加如下内容</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk"><span class="hljs-keyword">if</span> test -f <span class="hljs-regexp">/sys/</span>kernel<span class="hljs-regexp">/mm/</span>transparent_hugepage/enabled; then<br>echo never &gt; <span class="hljs-regexp">/sys/</span>kernel<span class="hljs-regexp">/mm/</span>transparent_hugepage/enabled<br>fi<br><span class="hljs-keyword">if</span> test -f <span class="hljs-regexp">/sys/</span>kernel<span class="hljs-regexp">/mm/</span>transparent_hugepage/defrag; then<br>echo never &gt; <span class="hljs-regexp">/sys/</span>kernel<span class="hljs-regexp">/mm/</span>transparent_hugepage/defrag<br>fi<br></code></pre></td></tr></table></figure>
<h3 id="3、调整客户端最大数"><a href="#3、调整客户端最大数" class="headerlink" title="3、调整客户端最大数"></a>3、调整客户端最大数</h3><figure class="highlight stata"><table><tr><td class="code"><pre><code class="hljs stata">vi /etc/security/limits.<span class="hljs-keyword">conf</span><br><span class="hljs-comment">* soft nofile 65536 # open files (-n)</span><br><span class="hljs-comment">* hard nofile 65536</span><br><span class="hljs-comment">* soft nproc 65565</span><br><span class="hljs-comment">* hard nproc 65565 # max user processes (-u)</span><br></code></pre></td></tr></table></figure>
<h3 id="4、关闭selinux"><a href="#4、关闭selinux" class="headerlink" title="4、关闭selinux"></a>4、关闭selinux</h3><p>修改/etc/selinux/config文件中设置</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">SELINUX</span>=disabled<br></code></pre></td></tr></table></figure>
<h3 id="5、关闭防火墙"><a href="#5、关闭防火墙" class="headerlink" title="5、关闭防火墙"></a>5、关闭防火墙</h3><figure class="highlight gauss"><table><tr><td class="code"><pre><code class="hljs gauss">systemctl <span class="hljs-keyword">stop</span> firewalld.service     <span class="hljs-meta">#停止firewall</span><br>systemctl <span class="hljs-keyword">disable</span> firewalld.service  <span class="hljs-meta">#禁止firewall开机启动</span><br></code></pre></td></tr></table></figure>
<h3 id="6、禁用交换区"><a href="#6、禁用交换区" class="headerlink" title="6、禁用交换区"></a>6、禁用交换区</h3><p>可以执行如下命令:</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">Swapoff -a</span><br></code></pre></td></tr></table></figure>
<h3 id="7、修改mysql配置文件"><a href="#7、修改mysql配置文件" class="headerlink" title="7、修改mysql配置文件"></a>7、修改mysql配置文件</h3><figure class="highlight ini"><table><tr><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[mysqld]</span><br><span class="hljs-attr">server_id</span>=<span class="hljs-number">1</span><br><span class="hljs-attr">transaction_isolation</span>=READ-COMMITTED<br><span class="hljs-attr">character_set_server</span>=utf8mb4<br><span class="hljs-attr">collation_server</span>=utf8mb4_unicode_ci<br><span class="hljs-attr">log_bin</span>=db-binlog<br><span class="hljs-attr">binlog_format</span>=mixed<br><span class="hljs-attr">expire_logs_days</span>=<span class="hljs-number">15</span><br><span class="hljs-attr">max_connections</span>=<span class="hljs-number">200</span><br><span class="hljs-attr">join_buffer_size</span>=<span class="hljs-number">4</span>M<br><span class="hljs-attr">sort_buffer_size</span>=<span class="hljs-number">4</span>M<br><span class="hljs-attr">read_rnd_buffer_size</span>=<span class="hljs-number">16</span>M<br><span class="hljs-attr">innodb_log_buffer_size</span>=<span class="hljs-number">16</span>M<br><span class="hljs-attr">innodb_buffer_pool_size</span>=【物理内存*（<span class="hljs-number">0.5</span>~<span class="hljs-number">0.75</span>）】<br><span class="hljs-attr">innodb_log_file_size</span>=<span class="hljs-number">256</span>M<br><br><span class="hljs-section">[client]</span><br><span class="hljs-attr">default-character-set</span>=utf8mb4<br></code></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>关系型数据库</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL自动备份脚本</title>
    <url>/2021/01/05/MySQL%E8%87%AA%E5%8A%A8%E5%A4%87%E4%BB%BD%E8%84%9A%E6%9C%AC/</url>
    <content><![CDATA[<h2 id="1、备份脚本"><a href="#1、备份脚本" class="headerlink" title="1、备份脚本"></a>1、备份脚本</h2><figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">mkdir -p <span class="hljs-regexp">/data/my</span>sqlbak/&#123;data,logs,scripts&#125;<br><br>cd <span class="hljs-regexp">/data/my</span>sqlbak/scripts<br><br>cat &gt; backup.sh &lt;&lt; EOF<br><span class="hljs-comment">#!/bin/bash</span><br><br>DATE=$(date +%Y%m%d)<br>BACKUP_ROOT=<span class="hljs-regexp">/data/my</span>sqlbak<br>BACKUP_FILEDIR=<span class="hljs-variable">$BACKUP_ROOT</span><span class="hljs-regexp">/data/</span><span class="hljs-variable">$DATE</span><br><br>mkdir -p <span class="hljs-variable">$BACKUP_ROOT</span><span class="hljs-regexp">/data/</span><span class="hljs-variable">$DATE</span><br>source <span class="hljs-regexp">/etc/</span>profile.d/mysql<br><br>DATABASES=$(mysql -uroot -peconage123 -e <span class="hljs-string">&quot;show databases&quot;</span> | grep -Ev <span class="hljs-string">&quot;Database|sys|information_schema|performance_schema|mysql&quot;</span>)<br><br><span class="hljs-keyword">for</span> db <span class="hljs-keyword">in</span> <span class="hljs-variable">$DATABASES</span><br><span class="hljs-keyword">do</span><br>echo<br>echo ----------<span class="hljs-variable">$BACKUP_FILEDIR</span>/<span class="hljs-variable">$&#123;db&#125;</span>_<span class="hljs-variable">$DATE</span>.sql.gz <span class="hljs-keyword">BEGIN</span>----------<br>mysqldump -uroot -phello123 --default-character-set=utf8 -q -n --lock-all-tables --flush-logs -E -R --triggers -B <span class="hljs-variable">$&#123;db&#125;</span> | gzip &gt; <span class="hljs-variable">$BACKUP_FILEDIR</span>/<span class="hljs-variable">$&#123;db&#125;</span>_<span class="hljs-variable">$DATE</span>.sql.gz<br>echo ----------<span class="hljs-variable">$BACKUP_FILEDIR</span>/<span class="hljs-variable">$&#123;db&#125;</span>_<span class="hljs-variable">$DATE</span>.sql.gz COMPLETE-------<br>echo<br>done<br><br>echo <span class="hljs-string">&quot;done&quot;</span><br>EOF<br></code></pre></td></tr></table></figure>
<h2 id="2、清理脚本"><a href="#2、清理脚本" class="headerlink" title="2、清理脚本"></a>2、清理脚本</h2><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><code class="hljs jboss-cli">cat &gt; backup_clean.sh &lt;&lt; EOF<br><span class="hljs-comment">#!/bin/bash</span><br><span class="hljs-keyword">echo</span> <span class="hljs-params">----------CLEAN</span> BEGIN<span class="hljs-params">----------</span><br>find <span class="hljs-string">/data/mysqlbak/data/</span> -mtime +14  -exec rm -rf &#123;&#125; \;<br><span class="hljs-keyword">echo</span> <span class="hljs-params">----------CLEAN</span> COMPLETE<span class="hljs-params">-------</span><br>EOF<br></code></pre></td></tr></table></figure>
<h2 id="3、给脚本执行权限"><a href="#3、给脚本执行权限" class="headerlink" title="3、给脚本执行权限"></a>3、给脚本执行权限</h2><figure class="highlight css"><table><tr><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">chmod</span> +<span class="hljs-selector-tag">x</span> <span class="hljs-selector-tag">backup</span><span class="hljs-selector-class">.sh</span><br><span class="hljs-selector-tag">chmod</span> +<span class="hljs-selector-tag">x</span> <span class="hljs-selector-tag">backup_clean</span><span class="hljs-selector-class">.sh</span><br></code></pre></td></tr></table></figure>
<h2 id="4、设置定时任务"><a href="#4、设置定时任务" class="headerlink" title="4、设置定时任务"></a>4、设置定时任务</h2><figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">crontab -e<br><span class="hljs-number">00</span> <span class="hljs-number">1</span> * * <span class="hljs-number">5</span> <span class="hljs-regexp">/data/my</span>sqlbak<span class="hljs-regexp">/scripts/</span>backup.sh<br><span class="hljs-number">00</span> <span class="hljs-number">1</span> * * <span class="hljs-number">5</span> <span class="hljs-regexp">/data/my</span>sqlbak<span class="hljs-regexp">/scripts/</span>backup_clean.sh &gt; <span class="hljs-regexp">/data/my</span>sqlbak<span class="hljs-regexp">/logs/</span>backup_full_clean.log <span class="hljs-number">2</span>&gt;&amp;<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>关系型数据库</category>
      </categories>
      <tags>
        <tag>Mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>Typora+PicGo+Gitee写博客和个人博客图床</title>
    <url>/2020/12/30/Typora-PicGo-Gitee%E5%86%99%E5%8D%9A%E5%AE%A2%E5%92%8C%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%9B%BE%E5%BA%8A/</url>
    <content><![CDATA[<h2 id="图床简介"><a href="#图床简介" class="headerlink" title="图床简介"></a>图床简介</h2><p>​        在写博客的过程中，我们都会遇到<strong>插入图片</strong>的情况，图片存在本地的话，我们把博客上传到网站后，会没有办法显示，而且存放在本地移植性也不太好，我们就需要图床辅助我们。</p>
<p>​        图床就是一个便于在博文中插入在线图片连接的个人图片仓库。设置图床之后，在自己博客中插入的图片链接就可以随时随地在线预览了，并且不会因为任何意外原因无法查看，除非自己亲自删除。</p>
<p>备注：需要nodejs环境</p>
<h3 id="工具介绍"><a href="#工具介绍" class="headerlink" title="工具介绍"></a>工具介绍</h3><ul>
<li><code>Typora</code>: Markdown工具，写Markdown文件的神器，简洁、方便、免费</li>
<li><code>PicGo</code> 开源的图片管理工具，可以自己上传图片到各种图床</li>
<li><code>gitee-uploader</code>: PicGo依赖这个插件进行上传到<code>gitee</code> 仓库</li>
<li><code>gitee码云</code>: 借助<code>gitee</code> 码云建立自己的仓库，构建<strong>免费</strong>图床，国内速度快</li>
</ul>
<h3 id="Picgo-介绍"><a href="#Picgo-介绍" class="headerlink" title="Picgo 介绍"></a>Picgo 介绍</h3><p>详情请看github地址： <a href="https://github.com/Molunerfinn/">https://github.com/Molunerfinn/</a></p>
<p>安装完成后打开，选择插件安装gitee</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20201229153454132.png" alt="image-20201229153454132"></p>
<h2 id="gitee-建立自己的图片仓库"><a href="#gitee-建立自己的图片仓库" class="headerlink" title="gitee 建立自己的图片仓库"></a>gitee 建立自己的图片仓库</h2><p>官网：<a href="https://gitee.com/login">https://gitee.com/login</a></p>
<p>创建存放图片的库</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20201229154329807.png" alt="image-20201229154329807"></p>
<p>获取私人令牌</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20201229154433314.png" alt="image-20201229154433314"></p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20201229154601830.png" alt="image-20201229154601830"></p>
<p>token令牌，进行复制后面会PicGo会用到，路径直接写名称就好，不用加/号</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20201229155712389.png" alt="image-20201229155712389"></p>
<p>测试上传</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20201229155810273.png" alt="image-20201229155810273"></p>
<p>在gitee查看</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20201229155830364.png" alt="image-20201229155830364"></p>
<h2 id="Typora-设置支持PicGo"><a href="#Typora-设置支持PicGo" class="headerlink" title="Typora 设置支持PicGo"></a>Typora 设置支持PicGo</h2><blockquote>
<p>设置Typora工具，当插入图片的时候，触发上传图片操作，然后上传服务选择PicGo.app来支持</p>
</blockquote>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master//img/image-20201229160054210.png" alt="image-20201229160054210"></p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>elasticsearch性能测试工具rally</title>
    <url>/2021/01/20/elasticsearch%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7rally/</url>
    <content><![CDATA[<h2 id="1、esrally功能：es的性能测试工具"><a href="#1、esrally功能：es的性能测试工具" class="headerlink" title="1、esrally功能：es的性能测试工具"></a>1、esrally功能：es的性能测试工具</h2><p>esrally不支持windows版本，目前只支持Linux和Mac OS。</p>
<h3 id="1-1-依赖环境"><a href="#1-1-依赖环境" class="headerlink" title="1.1 依赖环境"></a>1.1 依赖环境</h3><p>Install Python 3.8+ including <code>pip3</code>, git 1.9+ and an appropriate JDK to run ElasticsearchBe sure that <code>JAVA_HOME</code> points to that JDK</p>
<h3 id="1-2安装Python3"><a href="#1-2安装Python3" class="headerlink" title="1.2安装Python3"></a>1.2安装Python3</h3><p>官网： <a href="https://www.python.org/downloads/source/">https://www.python.org/downloads/source/</a></p>
<figure class="highlight vim"><table><tr><td class="code"><pre><code class="hljs vim">yum install -<span class="hljs-keyword">y</span> gcc <span class="hljs-keyword">make</span> cmake zlib-devel bzip2 bzip2-devel readline-devel sqlite sqlite-devel openssl-devel xz xz-devel libffi-devel<br>tar xvf Python-<span class="hljs-number">3.8</span>.<span class="hljs-number">5</span>.tgz<br>./configure<br><span class="hljs-keyword">make</span> &amp;&amp; <span class="hljs-keyword">make</span> install<br><span class="hljs-keyword">python3</span> -V<br><br>#卸载<span class="hljs-keyword">python</span><br>rpm -<span class="hljs-keyword">qa</span>|<span class="hljs-keyword">grep</span> <span class="hljs-keyword">python</span>|xargs rpm -ev --allmatches --nodeps ##强制删除已安装程序及其关联<br>whereis <span class="hljs-keyword">python</span> |xargs rm -frv ##删除所有残余文件 ##xargs，允许你对输出执行其他某些命令<br>whereis <span class="hljs-keyword">python</span> ##验证删除，返回无结果<br></code></pre></td></tr></table></figure>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20200806113743822.png" alt="image-20200806113743822"></p>
<h3 id="1-3安装pip3"><a href="#1-3安装pip3" class="headerlink" title="1.3安装pip3"></a>1.3安装pip3</h3><figure class="highlight apache"><table><tr><td class="code"><pre><code class="hljs apache"><span class="hljs-comment">#首先安装setuptools</span><br><span class="hljs-attribute">wget</span> --no-check-certificate  https://files.pythonhosted.org/packages/<span class="hljs-number">4</span>f/<span class="hljs-number">20</span>/b<span class="hljs-number">97449</span>e<span class="hljs-number">107801263</span>cf<span class="hljs-number">6</span>df<span class="hljs-number">2</span>eceaeed<span class="hljs-number">290</span>ee<span class="hljs-number">63262</span>ac<span class="hljs-number">2</span>c<span class="hljs-number">6</span>f<span class="hljs-number">736</span>df<span class="hljs-number">6964</span>a<span class="hljs-number">90879</span>/setuptools-<span class="hljs-number">49</span>.<span class="hljs-number">2</span>.<span class="hljs-number">1</span>.zip<br><br><span class="hljs-attribute">unzip</span> setuptools-<span class="hljs-number">49</span>.<span class="hljs-number">2</span>.<span class="hljs-number">1</span>.zip<br><span class="hljs-attribute">cd</span> setuptools-<span class="hljs-number">49</span>.<span class="hljs-number">2</span>.<span class="hljs-number">1</span>/<br><span class="hljs-attribute">python3</span> setup.py build<br><span class="hljs-attribute">python3</span> setup.py install<br><br><br><span class="hljs-attribute">wget</span>  --no-check-certificate  https://files.pythonhosted.org/packages/<span class="hljs-number">68</span>/<span class="hljs-number">1</span>a/<span class="hljs-number">8</span>cfcf<span class="hljs-number">3</span>a<span class="hljs-number">8</span>cba<span class="hljs-number">0</span>dd<span class="hljs-number">0</span>f<span class="hljs-number">125927</span>c<span class="hljs-number">986</span>b<span class="hljs-number">1502</span>f<span class="hljs-number">2</span>eed<span class="hljs-number">284</span>c<span class="hljs-number">63</span>fdfd<span class="hljs-number">6797</span>ea<span class="hljs-number">74300</span>ae<span class="hljs-number">4</span>/pip-<span class="hljs-number">20</span>.<span class="hljs-number">2</span>.<span class="hljs-number">1</span>.tar.gz<br><br><span class="hljs-attribute">tar</span> xvf pip-<span class="hljs-number">20</span>.<span class="hljs-number">2</span>.<span class="hljs-number">1</span>.tar.gz<br><span class="hljs-attribute">cd</span> pip-<span class="hljs-number">20</span>.<span class="hljs-number">2</span>.<span class="hljs-number">1</span>/<br><span class="hljs-attribute">python3</span> setup.py build<br><span class="hljs-attribute">python3</span> setup.py install<br><span class="hljs-attribute">pip3</span> -V<br></code></pre></td></tr></table></figure>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20200806114132939.png" alt="image-20200806114132939"></p>
<h3 id="1-4安装git"><a href="#1-4安装git" class="headerlink" title="1.4安装git"></a>1.4安装git</h3><figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk"><span class="hljs-comment">#安装依赖</span><br>yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel gcc perl-ExtUtils-MakeMaker<br>wget https:<span class="hljs-regexp">//mi</span>rrors.edge.kernel.org<span class="hljs-regexp">/pub/</span>software<span class="hljs-regexp">/scm/gi</span>t/git-<span class="hljs-number">2.8</span>.<span class="hljs-number">0</span>.tar.gz<br>tar xvf git-<span class="hljs-number">2.8</span>.<span class="hljs-number">0</span>.tar.gz<br>cd git-<span class="hljs-number">2.8</span>.<span class="hljs-number">0</span>/<br>make &amp;&amp; make install<br><br>vim <span class="hljs-regexp">/etc/</span>profile<br>export PATH=<span class="hljs-variable">$PATH</span>:<span class="hljs-regexp">/root/gi</span>t-<span class="hljs-number">2.8</span>.<span class="hljs-number">0</span>/bin<br><br>source <span class="hljs-regexp">/etc/</span>profile<br></code></pre></td></tr></table></figure>
<p>环境准备完毕</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20200806142208386.png" alt="image-20200806142208386"></p>
<h2 id="2、安装Rally"><a href="#2、安装Rally" class="headerlink" title="2、安装Rally"></a>2、安装Rally</h2><figure class="highlight cmake"><table><tr><td class="code"><pre><code class="hljs cmake">pip3 <span class="hljs-keyword">install</span> esrally<br></code></pre></td></tr></table></figure>
<p>报错</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ERROR</span>: THESE PACKAGES DO NOT MATCH THE HASHES FROM THE REQUIREMENTS FILE. If you have updated the package versions, please update the hashes. Otherwise, examine the package contents carefully; someone may have tampered with them.<br>    <span class="hljs-attribute">esrally</span> from https://files.pythonhosted.org/packages/<span class="hljs-number">84</span>/b<span class="hljs-number">6</span>/b<span class="hljs-number">4</span>ff<span class="hljs-number">1889355508</span>c<span class="hljs-number">78</span>ed<span class="hljs-number">34</span>c<span class="hljs-number">7772</span>a<span class="hljs-number">84</span>b<span class="hljs-number">3</span>b<span class="hljs-number">54</span>b<span class="hljs-number">1</span>fcbf<span class="hljs-number">62</span>d<span class="hljs-number">2</span>f<span class="hljs-number">8433</span>d<span class="hljs-number">4</span>f<span class="hljs-number">0</span>eb<span class="hljs-number">0</span>f<span class="hljs-number">6</span>a<span class="hljs-number">4</span>/esrally-<span class="hljs-number">2</span>.<span class="hljs-number">0</span>.<span class="hljs-number">1</span>-py<span class="hljs-number">3</span>-none-any.whl#sha<span class="hljs-number">256</span>=e<span class="hljs-number">12</span>c<span class="hljs-number">735</span>f<span class="hljs-number">7058</span>d<span class="hljs-number">555835</span>daa<span class="hljs-number">58</span>a<span class="hljs-number">8</span>a<span class="hljs-number">7</span>dd<span class="hljs-number">27</span>f<span class="hljs-number">1</span>ad<span class="hljs-number">8575</span>ad<span class="hljs-number">18052</span>ac<span class="hljs-number">3</span>d<span class="hljs-number">864</span>c<span class="hljs-number">6</span>cd<span class="hljs-number">6766</span>d<span class="hljs-number">8</span>:<br>        <span class="hljs-attribute">Expected</span> sha<span class="hljs-number">256</span> e<span class="hljs-number">12</span>c<span class="hljs-number">735</span>f<span class="hljs-number">7058</span>d<span class="hljs-number">555835</span>daa<span class="hljs-number">58</span>a<span class="hljs-number">8</span>a<span class="hljs-number">7</span>dd<span class="hljs-number">27</span>f<span class="hljs-number">1</span>ad<span class="hljs-number">8575</span>ad<span class="hljs-number">18052</span>ac<span class="hljs-number">3</span>d<span class="hljs-number">864</span>c<span class="hljs-number">6</span>cd<span class="hljs-number">6766</span>d<span class="hljs-number">8</span><br>             <span class="hljs-attribute">Got</span>        bba<span class="hljs-number">4</span>f<span class="hljs-number">1907942</span>fec<span class="hljs-number">7284</span>bc<span class="hljs-number">8</span>d<span class="hljs-number">099</span>d<span class="hljs-number">1881</span>b<span class="hljs-number">0</span>a<span class="hljs-number">5</span>b<span class="hljs-number">2</span>ba<span class="hljs-number">87631</span>e<span class="hljs-number">289240</span>b<span class="hljs-number">086</span>fb<span class="hljs-number">2</span>cef<span class="hljs-number">9</span>e<span class="hljs-number">0</span><br></code></pre></td></tr></table></figure>
<p>解决方法：</p>
<figure class="highlight crmsh"><table><tr><td class="code"><pre><code class="hljs crmsh">python3 -m pip install --<span class="hljs-keyword">user</span> <span class="hljs-title">--upgrade</span> pip<br></code></pre></td></tr></table></figure>
<p>再次执行安装</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20200806134605060.png" alt="image-20200806134605060"></p>
<h2 id="3、配置"><a href="#3、配置" class="headerlink" title="3、配置"></a>3、配置</h2><figure class="highlight nginx"><table><tr><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">esrally</span> configure                <span class="hljs-comment">#首次配置 检测环境</span><br></code></pre></td></tr></table></figure>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20200806153619205.png" alt="image-20200806153619205"></p>
<p>3.1 track介绍</p>
<p>​        默认使用的track是geonames 。track 是赛道的意思，在这里是指压测用的数据和测试策略。esrally 自带的track都在 github 上，地址在这里 <a href="https://github.com/elastic/rally-tracks%E3%80%82%E5%9C%A8%E8%AF%A5">https://github.com/elastic/rally-tracks。在该</a> repository 中，有很多测试数据，比如 geonames、geopoint、logging、nested 等，每个数据文件夹中的 README.md 中有详细的数据介绍，而 track.json 便是压测策略的定义文件。</p>
<p>​        附上esrally本身自带的数据集：主要用来压力测试的数据。默认测试就是选择geonames数据</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20200806170040030.png" alt="image-20200806170040030"></p>
<p>这里的需求很简单，需要测试的是现有集群，所以使用pipeline方式，官方自带的数据样本必须要安装git ,然后下载</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><code class="hljs routeros">esrally  <span class="hljs-attribute">--target-hosts</span>=127.0.0.1:9200  <span class="hljs-attribute">--pipeline</span>=benchmark-only  <span class="hljs-attribute">--track</span>=percolator        #测试远端的集群。更换IP即可<br></code></pre></td></tr></table></figure>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20200806170202853.png" alt="image-20200806170202853"></p>
<p>成功截图，很长截取了最后部分</p>
<p><strong><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20200806170302756.png" alt="image-20200806170302756"></strong></p>
<p>参考文章：</p>
<p><a href="https://blog.csdn.net/laoyang360/article/details/52155481">https://blog.csdn.net/laoyang360/article/details/52155481</a></p>
<p><a href="https://github.com/elastic/rally">https://github.com/elastic/rally</a></p>
<p><a href="https://esrally.readthedocs.io/en/latest/quickstart.html">https://esrally.readthedocs.io/en/latest/quickstart.html</a></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Elasticsearch</tag>
      </tags>
  </entry>
  <entry>
    <title>no module named yum有效解决办法</title>
    <url>/2021/01/20/no-module-named-yum%E6%9C%89%E6%95%88%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</url>
    <content><![CDATA[<h2 id="1、事件描述"><a href="#1、事件描述" class="headerlink" title="1、事件描述"></a>1、事件描述</h2><p>​        因误删系统python环境，导致yum不能使用，报错如下</p>
<figure class="highlight livescript"><table><tr><td class="code"><pre><code class="hljs livescript">There was a problem importing one <span class="hljs-keyword">of</span> the Python modules<br>required <span class="hljs-keyword">to</span> run yum. The error leading <span class="hljs-keyword">to</span> <span class="hljs-built_in">this</span> problem was:<br><br>   No <span class="hljs-built_in">module</span> named yum<br><br>Please install a package which provides <span class="hljs-built_in">this</span> <span class="hljs-built_in">module</span>, <span class="hljs-keyword">or</span><br>verify <span class="hljs-literal">that</span> the <span class="hljs-built_in">module</span> <span class="hljs-keyword">is</span> installed correctly.<br><br>It<span class="hljs-string">&#x27;s possible that the above module doesn&#x27;</span>t match the<br>current version <span class="hljs-keyword">of</span> Python, which is:<br><span class="hljs-number">2.7</span>.<span class="hljs-number">5</span> (<span class="hljs-keyword">default</span>, Apr  <span class="hljs-number">2</span> <span class="hljs-number">2020</span>, <span class="hljs-number">13</span>:<span class="hljs-number">16</span>:<span class="hljs-number">51</span>)<br>[GCC <span class="hljs-number">4.8</span>.<span class="hljs-number">5</span> <span class="hljs-number">20150623</span> (Red Hat <span class="hljs-number">4.8</span>.<span class="hljs-number">5</span>-<span class="hljs-number">39</span>)]<br><br>If you cannot solve <span class="hljs-built_in">this</span> problem yourself, please go <span class="hljs-keyword">to</span><br>the yum faq at:<br>  http:<span class="hljs-regexp">//yum.baseurl.org/wiki/Faq</span><br></code></pre></td></tr></table></figure>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20200806112611007.png" alt="image-20200806112611007"></p>
<h2 id="2、解决办法"><a href="#2、解决办法" class="headerlink" title="2、解决办法"></a>2、解决办法</h2><h3 id="2-1卸载系统原有的yum安装包"><a href="#2-1卸载系统原有的yum安装包" class="headerlink" title="2.1卸载系统原有的yum安装包"></a>2.1卸载系统原有的yum安装包</h3><figure class="highlight clean"><table><tr><td class="code"><pre><code class="hljs clean">#强制删除系统安装程序yum包及其相关<br>rpm -qa|grep yum|xargs rpm -ev --allmatches --nodeps<br>#删除所有残余文件<br>whereis yum |xargs rm -frv  ##xargs，允许你对输出执行其他某些命令<br>#验证删除<br>whereis yum  ##验证删除，返回无结果<br></code></pre></td></tr></table></figure>
<h3 id="2-2下载python需要的rpm包"><a href="#2-2下载python需要的rpm包" class="headerlink" title="2.2下载python需要的rpm包"></a>2.2下载python需要的rpm包</h3><figure class="highlight apache"><table><tr><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">wget</span>  http://mirrors.<span class="hljs-number">163</span>.com/centos/<span class="hljs-number">6</span>/os/x<span class="hljs-number">86</span>_<span class="hljs-number">64</span>/Packages/python-chardet-<span class="hljs-number">2</span>.<span class="hljs-number">2</span>.<span class="hljs-number">1</span>-<span class="hljs-number">1</span>.el<span class="hljs-number">6</span>.noarch.rpm<br><span class="hljs-attribute">wget</span>  http://mirrors.<span class="hljs-number">163</span>.com/centos/<span class="hljs-number">7</span>/os/x<span class="hljs-number">86</span>_<span class="hljs-number">64</span>/Packages/python-libs-<span class="hljs-number">2</span>.<span class="hljs-number">7</span>.<span class="hljs-number">5</span>-<span class="hljs-number">88</span>.el<span class="hljs-number">7</span>.x<span class="hljs-number">86</span>_<span class="hljs-number">64</span>.rpm<br><span class="hljs-attribute">wget</span>  http://mirrors.<span class="hljs-number">163</span>.com/centos/<span class="hljs-number">7</span>/os/x<span class="hljs-number">86</span>_<span class="hljs-number">64</span>/Packages/libxml<span class="hljs-number">2</span>-python-<span class="hljs-number">2</span>.<span class="hljs-number">9</span>.<span class="hljs-number">1</span>-<span class="hljs-number">6</span>.el<span class="hljs-number">7</span>.<span class="hljs-number">4</span>.x<span class="hljs-number">86</span>_<span class="hljs-number">64</span>.rpm<br><span class="hljs-attribute">wget</span>  http://mirrors.<span class="hljs-number">163</span>.com/centos/<span class="hljs-number">7</span>/os/x<span class="hljs-number">86</span>_<span class="hljs-number">64</span>/Packages/libsemanage-python-<span class="hljs-number">2</span>.<span class="hljs-number">5</span>-<span class="hljs-number">14</span>.el<span class="hljs-number">7</span>.x<span class="hljs-number">86</span>_<span class="hljs-number">64</span>.rpm<br><span class="hljs-attribute">wget</span>  http://mirrors.<span class="hljs-number">163</span>.com/centos/<span class="hljs-number">7</span>/os/x<span class="hljs-number">86</span>_<span class="hljs-number">64</span>/Packages/policycoreutils-python-<span class="hljs-number">2</span>.<span class="hljs-number">5</span>-<span class="hljs-number">34</span>.el<span class="hljs-number">7</span>.x<span class="hljs-number">86</span>_<span class="hljs-number">64</span>.rpm<br><span class="hljs-attribute">wget</span>  http://mirrors.<span class="hljs-number">163</span>.com/centos/<span class="hljs-number">7</span>/os/x<span class="hljs-number">86</span>_<span class="hljs-number">64</span>/Packages/libselinux-python-<span class="hljs-number">2</span>.<span class="hljs-number">5</span>-<span class="hljs-number">15</span>.el<span class="hljs-number">7</span>.x<span class="hljs-number">86</span>_<span class="hljs-number">64</span>.rpm<br><span class="hljs-attribute">wget</span>  http://mirrors.<span class="hljs-number">163</span>.com/centos/<span class="hljs-number">7</span>/os/x<span class="hljs-number">86</span>_<span class="hljs-number">64</span>/Packages/python-iniparse-<span class="hljs-number">0</span>.<span class="hljs-number">4</span>-<span class="hljs-number">9</span>.el<span class="hljs-number">7</span>.noarch.rpm<br><span class="hljs-attribute">wget</span>  http://mirrors.<span class="hljs-number">163</span>.com/centos/<span class="hljs-number">7</span>/os/x<span class="hljs-number">86</span>_<span class="hljs-number">64</span>/Packages/python-schedutils-<span class="hljs-number">0</span>.<span class="hljs-number">4</span>-<span class="hljs-number">6</span>.el<span class="hljs-number">7</span>.x<span class="hljs-number">86</span>_<span class="hljs-number">64</span>.rpm<br><span class="hljs-attribute">wget</span>  http://mirrors.<span class="hljs-number">163</span>.com/centos/<span class="hljs-number">7</span>/os/x<span class="hljs-number">86</span>_<span class="hljs-number">64</span>/Packages/python-linux-procfs-<span class="hljs-number">0</span>.<span class="hljs-number">4</span>.<span class="hljs-number">11</span>-<span class="hljs-number">4</span>.el<span class="hljs-number">7</span>.noarch.rpm<br><span class="hljs-attribute">wget</span>  http://mirrors.<span class="hljs-number">163</span>.com/centos/<span class="hljs-number">7</span>/os/x<span class="hljs-number">86</span>_<span class="hljs-number">64</span>/Packages/python-urlgrabber-<span class="hljs-number">3</span>.<span class="hljs-number">10</span>-<span class="hljs-number">10</span>.el<span class="hljs-number">7</span>.noarch.rpm<br><span class="hljs-attribute">wget</span>  http://mirrors.<span class="hljs-number">163</span>.com/centos/<span class="hljs-number">7</span>/os/x<span class="hljs-number">86</span>_<span class="hljs-number">64</span>/Packages/dbus-python-<span class="hljs-number">1</span>.<span class="hljs-number">1</span>.<span class="hljs-number">1</span>-<span class="hljs-number">9</span>.el<span class="hljs-number">7</span>.x<span class="hljs-number">86</span>_<span class="hljs-number">64</span>.rpm<br><span class="hljs-attribute">wget</span>  http://mirrors.<span class="hljs-number">163</span>.com/centos/<span class="hljs-number">7</span>/os/x<span class="hljs-number">86</span>_<span class="hljs-number">64</span>/Packages/python-firewall-<span class="hljs-number">0</span>.<span class="hljs-number">6</span>.<span class="hljs-number">3</span>-<span class="hljs-number">8</span>.el<span class="hljs-number">7</span>.noarch.rpm<br><span class="hljs-attribute">wget</span>  http://mirrors.<span class="hljs-number">163</span>.com/centos/<span class="hljs-number">7</span>/os/x<span class="hljs-number">86</span>_<span class="hljs-number">64</span>/Packages/python-perf-<span class="hljs-number">3</span>.<span class="hljs-number">10</span>.<span class="hljs-number">0</span>-<span class="hljs-number">1127</span>.el<span class="hljs-number">7</span>.x<span class="hljs-number">86</span>_<span class="hljs-number">64</span>.rpm<br><span class="hljs-attribute">wget</span>  http://mirrors.<span class="hljs-number">163</span>.com/centos/<span class="hljs-number">7</span>/os/x<span class="hljs-number">86</span>_<span class="hljs-number">64</span>/Packages/python-kitchen-<span class="hljs-number">1</span>.<span class="hljs-number">1</span>.<span class="hljs-number">1</span>-<span class="hljs-number">5</span>.el<span class="hljs-number">7</span>.noarch.rpm<br><span class="hljs-attribute">wget</span>  http://mirrors.<span class="hljs-number">163</span>.com/centos/<span class="hljs-number">7</span>/os/x<span class="hljs-number">86</span>_<span class="hljs-number">64</span>/Packages/python-<span class="hljs-number">2</span>.<span class="hljs-number">7</span>.<span class="hljs-number">5</span>-<span class="hljs-number">88</span>.el<span class="hljs-number">7</span>.x<span class="hljs-number">86</span>_<span class="hljs-number">64</span>.rpm<br><span class="hljs-attribute">wget</span>  http://mirrors.<span class="hljs-number">163</span>.com/centos/<span class="hljs-number">7</span>/os/x<span class="hljs-number">86</span>_<span class="hljs-number">64</span>/Packages/python-decorator-<span class="hljs-number">3</span>.<span class="hljs-number">4</span>.<span class="hljs-number">0</span>-<span class="hljs-number">3</span>.el<span class="hljs-number">7</span>.noarch.rpm<br><span class="hljs-attribute">wget</span>  http://mirrors.<span class="hljs-number">163</span>.com/centos/<span class="hljs-number">7</span>/os/x<span class="hljs-number">86</span>_<span class="hljs-number">64</span>/Packages/audit-libs-python-<span class="hljs-number">2</span>.<span class="hljs-number">8</span>.<span class="hljs-number">5</span>-<span class="hljs-number">4</span>.el<span class="hljs-number">7</span>.x<span class="hljs-number">86</span>_<span class="hljs-number">64</span>.rpm<br><span class="hljs-attribute">wget</span>  http://mirrors.<span class="hljs-number">163</span>.com/centos/<span class="hljs-number">7</span>/os/x<span class="hljs-number">86</span>_<span class="hljs-number">64</span>/Packages/python-IPy-<span class="hljs-number">0</span>.<span class="hljs-number">75</span>-<span class="hljs-number">6</span>.el<span class="hljs-number">7</span>.noarch.rpm<br><span class="hljs-attribute">wget</span>  http://mirrors.<span class="hljs-number">163</span>.com/centos/<span class="hljs-number">7</span>/os/x<span class="hljs-number">86</span>_<span class="hljs-number">64</span>/Packages/python-gobject-base-<span class="hljs-number">3</span>.<span class="hljs-number">22</span>.<span class="hljs-number">0</span>-<span class="hljs-number">1</span>.el<span class="hljs-number">7</span>_<span class="hljs-number">4</span>.<span class="hljs-number">1</span>.x<span class="hljs-number">86</span>_<span class="hljs-number">64</span>.rpm<br><span class="hljs-attribute">wget</span>  http://mirrors.<span class="hljs-number">163</span>.com/centos/<span class="hljs-number">7</span>/os/x<span class="hljs-number">86</span>_<span class="hljs-number">64</span>/Packages/python-slip-<span class="hljs-number">0</span>.<span class="hljs-number">4</span>.<span class="hljs-number">0</span>-<span class="hljs-number">4</span>.el<span class="hljs-number">7</span>.noarch.rpm<br><span class="hljs-attribute">wget</span>  http://mirrors.<span class="hljs-number">163</span>.com/centos/<span class="hljs-number">7</span>/os/x<span class="hljs-number">86</span>_<span class="hljs-number">64</span>/Packages/newt-python-<span class="hljs-number">0</span>.<span class="hljs-number">52</span>.<span class="hljs-number">15</span>-<span class="hljs-number">4</span>.el<span class="hljs-number">7</span>.x<span class="hljs-number">86</span>_<span class="hljs-number">64</span>.rpm<br><span class="hljs-attribute">wget</span>  http://mirrors.<span class="hljs-number">163</span>.com/centos/<span class="hljs-number">7</span>/os/x<span class="hljs-number">86</span>_<span class="hljs-number">64</span>/Packages/python-configobj-<span class="hljs-number">4</span>.<span class="hljs-number">7</span>.<span class="hljs-number">2</span>-<span class="hljs-number">7</span>.el<span class="hljs-number">7</span>.noarch.rpm<br><span class="hljs-attribute">wget</span>  http://mirrors.<span class="hljs-number">163</span>.com/centos/<span class="hljs-number">7</span>/os/x<span class="hljs-number">86</span>_<span class="hljs-number">64</span>/Packages/python-pycurl-<span class="hljs-number">7</span>.<span class="hljs-number">19</span>.<span class="hljs-number">0</span>-<span class="hljs-number">19</span>.el<span class="hljs-number">7</span>.x<span class="hljs-number">86</span>_<span class="hljs-number">64</span>.rpm<br><span class="hljs-attribute">wget</span>  http://mirrors.<span class="hljs-number">163</span>.com/centos/<span class="hljs-number">7</span>/os/x<span class="hljs-number">86</span>_<span class="hljs-number">64</span>/Packages/rpm-python-<span class="hljs-number">4</span>.<span class="hljs-number">11</span>.<span class="hljs-number">3</span>-<span class="hljs-number">43</span>.el<span class="hljs-number">7</span>.x<span class="hljs-number">86</span>_<span class="hljs-number">64</span>.rpm<br><span class="hljs-attribute">wget</span>  http://mirrors.<span class="hljs-number">163</span>.com/centos/<span class="hljs-number">7</span>/os/x<span class="hljs-number">86</span>_<span class="hljs-number">64</span>/Packages/python-slip-dbus-<span class="hljs-number">0</span>.<span class="hljs-number">4</span>.<span class="hljs-number">0</span>-<span class="hljs-number">4</span>.el<span class="hljs-number">7</span>.noarch.rpm<br><span class="hljs-attribute">wget</span>  http://mirrors.<span class="hljs-number">163</span>.com/centos/<span class="hljs-number">7</span>/os/x<span class="hljs-number">86</span>_<span class="hljs-number">64</span>/Packages/python-pyudev-<span class="hljs-number">0</span>.<span class="hljs-number">15</span>-<span class="hljs-number">9</span>.el<span class="hljs-number">7</span>.noarch.rpm<br></code></pre></td></tr></table></figure>
<h3 id="2-3下载yum所需的rpm包"><a href="#2-3下载yum所需的rpm包" class="headerlink" title="2.3下载yum所需的rpm包"></a>2.3下载yum所需的rpm包</h3><figure class="highlight apache"><table><tr><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">wget</span> http://mirrors.<span class="hljs-number">163</span>.com/centos/<span class="hljs-number">7</span>.<span class="hljs-number">6</span>.<span class="hljs-number">1810</span>/os/x<span class="hljs-number">86</span>_<span class="hljs-number">64</span>/Packages/yum-<span class="hljs-number">3</span>.<span class="hljs-number">4</span>.<span class="hljs-number">3</span>-<span class="hljs-number">161</span>.el<span class="hljs-number">7</span>.centos.noarch.rpm<br><span class="hljs-attribute">wget</span> http://mirrors.<span class="hljs-number">163</span>.com/centos/<span class="hljs-number">7</span>.<span class="hljs-number">6</span>.<span class="hljs-number">1810</span>/os/x<span class="hljs-number">86</span>_<span class="hljs-number">64</span>/Packages/yum-metadata-parser-<span class="hljs-number">1</span>.<span class="hljs-number">1</span>.<span class="hljs-number">4</span>-<span class="hljs-number">10</span>.el<span class="hljs-number">7</span>.x<span class="hljs-number">86</span>_<span class="hljs-number">64</span>.rpm<br><span class="hljs-attribute">wget</span> http://mirrors.<span class="hljs-number">163</span>.com/centos/<span class="hljs-number">7</span>.<span class="hljs-number">6</span>.<span class="hljs-number">1810</span>/os/x<span class="hljs-number">86</span>_<span class="hljs-number">64</span>/Packages/yum-plugin-aliases-<span class="hljs-number">1</span>.<span class="hljs-number">1</span>.<span class="hljs-number">31</span>-<span class="hljs-number">50</span>.el<span class="hljs-number">7</span>.noarch.rpm<br><span class="hljs-attribute">wget</span> http://mirrors.<span class="hljs-number">163</span>.com/centos/<span class="hljs-number">7</span>.<span class="hljs-number">6</span>.<span class="hljs-number">1810</span>/os/x<span class="hljs-number">86</span>_<span class="hljs-number">64</span>/Packages/yum-plugin-fastestmirror-<span class="hljs-number">1</span>.<span class="hljs-number">1</span>.<span class="hljs-number">31</span>-<span class="hljs-number">50</span>.el<span class="hljs-number">7</span>.noarch.rpm<br><span class="hljs-attribute">wget</span> http://mirrors.<span class="hljs-number">163</span>.com/centos/<span class="hljs-number">7</span>.<span class="hljs-number">6</span>.<span class="hljs-number">1810</span>/os/x<span class="hljs-number">86</span>_<span class="hljs-number">64</span>/Packages/yum-plugin-protectbase-<span class="hljs-number">1</span>.<span class="hljs-number">1</span>.<span class="hljs-number">31</span>-<span class="hljs-number">50</span>.el<span class="hljs-number">7</span>.noarch.rpm<br><span class="hljs-attribute">wget</span> http://mirrors.<span class="hljs-number">163</span>.com/centos/<span class="hljs-number">7</span>.<span class="hljs-number">6</span>.<span class="hljs-number">1810</span>/os/x<span class="hljs-number">86</span>_<span class="hljs-number">64</span>/Packages/yum-utils-<span class="hljs-number">1</span>.<span class="hljs-number">1</span>.<span class="hljs-number">31</span>-<span class="hljs-number">50</span>.el<span class="hljs-number">7</span>.noarch.rpm<br></code></pre></td></tr></table></figure>
<h3 id="2-4安装"><a href="#2-4安装" class="headerlink" title="2.4安装"></a>2.4安装</h3><p>​        进入到放rpm包的目录，使用下面命令安装</p>
<figure class="highlight jboss-cli"><table><tr><td class="code"><pre><code class="hljs jboss-cli">rpm -ivh <span class="hljs-params">--force</span> *<span class="hljs-string">.rpm</span> <span class="hljs-params">--nodeps</span><br></code></pre></td></tr></table></figure>
<h3 id="2-5验证"><a href="#2-5验证" class="headerlink" title="2.5验证"></a>2.5验证</h3><p>​        执行yum命令就能看到熟悉的界面了</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>rancher:v2.3安装创建K8s集群</title>
    <url>/2021/01/04/rancher-v2-3%E5%AE%89%E8%A3%85%E5%88%9B%E5%BB%BAK8s%E9%9B%86%E7%BE%A4/</url>
    <content><![CDATA[<h3 id="1、rancher介绍"><a href="#1、rancher介绍" class="headerlink" title="1、rancher介绍"></a>1、rancher介绍</h3><p>每个团队都可以在他们选择的公共云或私有云上部署应用程序，Rancher 在 IT 和 DevOps 组织中扮演的角色如下：</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20191125105835491.png" alt="image-20191125105835491"></p>
<p>同时具备多种功能：</p>
<ul>
<li>内置 CI/CD 流水线</li>
<li>告警和日志收集功能</li>
<li>多集群管理功能</li>
<li>集成 Rancher Kubernetes Engine (RKE)</li>
<li>与各云 Kubernetes 服务(如 GKE、EKS、AKS) 集成</li>
</ul>
<h3 id="2、安装要求"><a href="#2、安装要求" class="headerlink" title="2、安装要求"></a>2、安装要求</h3><h4 id="2-1操作系统和Docker要求"><a href="#2-1操作系统和Docker要求" class="headerlink" title="2.1操作系统和Docker要求"></a>2.1操作系统和Docker要求</h4><p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20191125104210860.png" alt="image-20191125104210860"></p>
<h4 id="2-2硬件需求"><a href="#2-2硬件需求" class="headerlink" title="2.2硬件需求"></a>2.2硬件需求</h4><p>HA集群</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20191125104545019.png" alt="image-20191125104545019"></p>
<p>单节点</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20191125104610584.png" alt="image-20191125104610584"></p>
<h4 id="2-3Rancher与用户群集通信的端口要求"><a href="#2-3Rancher与用户群集通信的端口要求" class="headerlink" title="2.3Rancher与用户群集通信的端口要求"></a>2.3Rancher与用户群集通信的端口要求</h4><p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20191125104812067.png" alt="image-20191125104812067"></p>
<h3 id="3、单节点安装"><a href="#3、单节点安装" class="headerlink" title="3、单节点安装"></a>3、单节点安装</h3><figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">docker run -d --restart=unless-stopped \<br>  -p <span class="hljs-number">80</span>:<span class="hljs-number">80</span> -p <span class="hljs-number">443</span>:<span class="hljs-number">443</span> \<br>  -v <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/rancher:/u</span>sr<span class="hljs-regexp">/local/</span>rancher \<br>  rancher/rancher:latest<br></code></pre></td></tr></table></figure>
<h3 id="4、rancher的web界面"><a href="#4、rancher的web界面" class="headerlink" title="4、rancher的web界面"></a>4、rancher的web界面</h3><h4 id="4-1自定义集群"><a href="#4-1自定义集群" class="headerlink" title="4.1自定义集群"></a>4.1自定义集群</h4><p>通过宿主机的IP登录</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20191125110853326.png" alt="image-20191125110853326"></p>
<p>设置需要访问的URL地址</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20191125110956934.png" alt="image-20191125110956934"></p>
<p>设置中文字体</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20191125111044885.png" alt="image-20191125111044885"></p>
<p>添加集群</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20191125111137103.png" alt="image-20191125111137103"></p>
<p>生成自己的集群</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20191125111225387.png" alt="image-20191125111225387"></p>
<p>可以自定义RKE集群，也可以导入自己已经建好的集群。</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20191125111408862.png" alt="image-20191125111408862"></p>
<p>设置自定义集群的名字 ，选择需要安装的集群的版本。</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20191125111607904.png" alt="image-20191125111607904"></p>
<p>选择需要的网络策略。</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20191125111641275.png" alt="image-20191125111641275"></p>
<p>自己私有仓库地址，以及账密。</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20191125111756334.png" alt="image-20191125111756334"></p>
<p>根据自己需求设置。</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20191125111943481.png" alt="image-20191125111943481"></p>
<p>master节点选择后在你需要安装成master节点运行下面的命令</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20191125112055397.png" alt="image-20191125112055397"></p>
<p>在工作节点运行以下命令。</p>
<p>运行过程会去拉取所需镜像，时间视自己网络情况而定。</p>
<p>所有容器运行好之后可以看到以下界面，表示你的集群已经好了</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20191125112358230.png" alt="image-20191125112358230"></p>
<p>复制kubeconfig文件在master节点下执行</p>
<figure class="highlight elixir"><table><tr><td class="code"><pre><code class="hljs elixir"><span class="hljs-comment"># 添加Kubernetes的yum源</span><br><span class="hljs-variable">$ </span>cat &gt;&gt; <span class="hljs-regexp">/etc/yum</span>.repos.d/kubernetes.repo &lt;&lt;EOF<br>[kubernetes]<br>name=Kubernetes<br>baseurl=<span class="hljs-symbol">https:</span>/<span class="hljs-regexp">/mirrors.aliyun.com/kubernetes</span><span class="hljs-regexp">/yum/repos</span><span class="hljs-regexp">/kubernetes-el7-x86_64/</span><br>enabled=<span class="hljs-number">1</span><br>gpgcheck=0<br>EOF<br><br><span class="hljs-comment"># 查看可安装的版本</span><br><span class="hljs-variable">$ </span>yum list kubectl –showduplicates<br><br><span class="hljs-comment"># yum方式安装kubectl</span><br><span class="hljs-variable">$ </span>yum install -y kubectl.x86_64<br><br>[root<span class="hljs-variable">@node1</span> ~]<span class="hljs-comment"># mkdir -p .kube</span><br>[root<span class="hljs-variable">@node1</span> ~]<span class="hljs-comment"># vim .kube/config</span><br></code></pre></td></tr></table></figure>
<p>即可在master节点通过命令行查看整个集群信息。</p>
<h4 id="4-2导入集群"><a href="#4-2导入集群" class="headerlink" title="4.2导入集群"></a>4.2导入集群</h4><p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20191125113210838.png" alt="image-20191125113210838"></p>
<p>随便定义一个集群名。</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20191125113405043.png" alt="image-20191125113405043"></p>
<p>复制下面两条命令在master节点运行，运行第一条命令时，由于是自签证书会报x509错误，在执行下面一条命令跳过错误就好。</p>
<p>当在master节点看到</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20191125113631090.png" alt="image-20191125113631090"></p>
<p>则表示集群导入成功，如果pod状态报错，根据报错信息处理即可。</p>
]]></content>
      <categories>
        <category>rancher</category>
      </categories>
      <tags>
        <tag>rancher</tag>
      </tags>
  </entry>
  <entry>
    <title>logstash字符转换</title>
    <url>/2021/01/20/logstash%E5%AD%97%E7%AC%A6%E8%BD%AC%E6%8D%A2/</url>
    <content><![CDATA[<p>项目需求</p>
<p>request_time， upstream_response_time 等的数据类型需要改为float</p>
<h2 id="1、nginx配置json格式日志"><a href="#1、nginx配置json格式日志" class="headerlink" title="1、nginx配置json格式日志"></a>1、nginx配置json格式日志</h2><figure class="highlight scilab"><table><tr><td class="code"><pre><code class="hljs scilab">http &#123;<br>    log_format json <span class="hljs-string">&#x27;&#123;&quot;</span>@timestamp<span class="hljs-string">&quot;:&quot;</span>$time_iso8601<span class="hljs-string">&quot;,&#x27;</span><br>                     <span class="hljs-string">&#x27;&quot;</span>server_addr<span class="hljs-string">&quot;:&quot;</span>$server_addr<span class="hljs-string">&quot;,&#x27;</span><br>                     <span class="hljs-string">&#x27;&quot;</span>remote_addr<span class="hljs-string">&quot;:&quot;</span>$remote_addr<span class="hljs-string">&quot;,&#x27;</span><br>                     <span class="hljs-string">&#x27;&quot;</span>cookie_JSESSIONID<span class="hljs-string">&quot;:&quot;</span>$cookie_JSESSIONID<span class="hljs-string">&quot;,&#x27;</span><br>                     <span class="hljs-string">&#x27;&quot;</span>body_bytes_sent<span class="hljs-string">&quot;:$body_bytes_sent,&#x27;</span><br>                     <span class="hljs-string">&#x27;&quot;</span>request_uri<span class="hljs-string">&quot;:&quot;</span>$request_uri<span class="hljs-string">&quot;,&#x27;</span><br>                     <span class="hljs-string">&#x27;&quot;</span>request_method<span class="hljs-string">&quot;:&quot;</span>$request_method<span class="hljs-string">&quot;,&#x27;</span><br>                     <span class="hljs-string">&#x27;&quot;</span>server_protocol<span class="hljs-string">&quot;:&quot;</span>$server_protocol<span class="hljs-string">&quot;,&#x27;</span><br>                     <span class="hljs-string">&#x27;&quot;</span>scheme<span class="hljs-string">&quot;:&quot;</span>$scheme<span class="hljs-string">&quot;,&#x27;</span><br>                     <span class="hljs-string">&#x27;&quot;</span>request_time<span class="hljs-string">&quot;:$request_time,&#x27;</span><br>                     <span class="hljs-string">&#x27;&quot;</span>upstream_response_time<span class="hljs-string">&quot;:&quot;</span>$upstream_response_time<span class="hljs-string">&quot;,&#x27;</span><br>                     <span class="hljs-string">&#x27;&quot;</span>upstream_addr<span class="hljs-string">&quot;:&quot;</span>$upstream_addr<span class="hljs-string">&quot;,&#x27;</span><br>                     <span class="hljs-string">&#x27;&quot;</span>hostname<span class="hljs-string">&quot;:&quot;</span>$hostname<span class="hljs-string">&quot;,&#x27;</span><br>                     <span class="hljs-string">&#x27;&quot;</span>http_host<span class="hljs-string">&quot;:&quot;</span>$http_host<span class="hljs-string">&quot;,&#x27;</span><br>                     <span class="hljs-string">&#x27;&quot;</span>uri<span class="hljs-string">&quot;:&quot;</span>$uri<span class="hljs-string">&quot;,&#x27;</span><br>                     <span class="hljs-string">&#x27;&quot;</span>http_x_forwarded_for<span class="hljs-string">&quot;:&quot;</span>$http_x_forwarded_for<span class="hljs-string">&quot;,&#x27;</span><br>                     <span class="hljs-string">&#x27;&quot;</span>http_referer<span class="hljs-string">&quot;:&quot;</span>$http_referer<span class="hljs-string">&quot;,&#x27;</span><br>                     <span class="hljs-string">&#x27;&quot;</span>http_user_agent<span class="hljs-string">&quot;:&quot;</span>$http_user_agent<span class="hljs-string">&quot;,&#x27;</span><br>                     <span class="hljs-string">&#x27;&quot;</span>X-Forwarded-Proto<span class="hljs-string">&quot;:&quot;</span>$http_x_forwarded_proto<span class="hljs-string">&quot;,&#x27;</span><br>                     <span class="hljs-string">&#x27;&quot;</span>cookie<span class="hljs-string">&quot;:&quot;</span>$http_cookie<span class="hljs-string">&quot;,&#x27;</span><br>                     <span class="hljs-string">&#x27;&quot;</span>status<span class="hljs-string">&quot;:&quot;</span>$status<span class="hljs-string">&quot;&#125;&#x27;</span>;<br><br>    server &#123;<br>        listen       <span class="hljs-number">80</span>;<br>        access_log  logs/pc.access.<span class="hljs-built_in">log</span>  json;<br><br></code></pre></td></tr></table></figure>
<h2 id="2、filebeat收集日志"><a href="#2、filebeat收集日志" class="headerlink" title="2、filebeat收集日志"></a>2、filebeat收集日志</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">filebeat.inputs:</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">log</span><br>  <span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">paths:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">/data/nginx/*.log</span><br>  <span class="hljs-attr">json.keys_under_root:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">json.overwrite_keys:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">encoding:</span> <span class="hljs-string">utf-8</span><br>  <span class="hljs-attr">fields:</span><br>    <span class="hljs-attr">document_type:</span> <span class="hljs-string">nginx_access_log</span><br><br><span class="hljs-attr">output.logstash:</span><br>  <span class="hljs-attr">hosts:</span> [<span class="hljs-string">&quot;localhost:5044&quot;</span>]<br><br><span class="hljs-comment">#输出到es中</span><br><span class="hljs-comment">#output.elasticsearch:</span><br><span class="hljs-comment">#  hosts: [&quot;192.168.1.30:9200&quot;]</span><br><span class="hljs-comment">#  index: &quot;nginx-%&#123;+YYYY-MM-dd&#125;&quot;</span><br><span class="hljs-comment">#setup.template.name: &quot;access&quot;</span><br><span class="hljs-comment">#setup.template.pattern: &quot;access-*&quot;</span><br></code></pre></td></tr></table></figure>
<h2 id="3、logstash配置"><a href="#3、logstash配置" class="headerlink" title="3、logstash配置"></a>3、logstash配置</h2><p>需java环境</p>
<p>配置startup.options文件</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">LS_HOME</span>=/opt/logstash-<span class="hljs-number">6.5</span>.<span class="hljs-number">3</span><br><span class="hljs-attr">LS_SETTINGS_DIR</span>=<span class="hljs-string">&quot;$&#123;LS_HOME&#125;/config&quot;</span><br><span class="hljs-attr">LS_OPTS</span>=<span class="hljs-string">&quot;--path.settings $&#123;LS_SETTINGS_DIR&#125;&quot;</span><br><span class="hljs-attr">LS_PIDFILE</span>=/var/run/logstash.pid<br><span class="hljs-attr">LS_USER</span>=elk<br><span class="hljs-attr">LS_GROUP</span>=elk<br><span class="hljs-attr">LS_GC_LOG_FILE</span>=/opt/logstash-<span class="hljs-number">6.5</span>.<span class="hljs-number">3</span>/logs/gc.log<br><span class="hljs-attr">LS_OPEN_FILES</span>=<span class="hljs-number">16384</span><br><span class="hljs-attr">LS_NICE</span>=<span class="hljs-number">19</span><br><span class="hljs-attr">SERVICE_NAME</span>=<span class="hljs-string">&quot;logstash&quot;</span><br><span class="hljs-attr">SERVICE_DESCRIPTION</span>=<span class="hljs-string">&quot;logstash&quot;</span><br></code></pre></td></tr></table></figure>
<p>配置template_nginxlog.json模板</p>
<figure class="highlight json"><table><tr><td class="code"><pre><code class="hljs json">&#123;<br><br>  <span class="hljs-attr">&quot;index_patterns&quot;</span> : [<span class="hljs-string">&quot;nginx-*&quot;</span>],<br><br>  <span class="hljs-attr">&quot;version&quot;</span> : <span class="hljs-number">60001</span>,<br><br>  <span class="hljs-attr">&quot;settings&quot;</span> : &#123;<br><br>    <span class="hljs-attr">&quot;index.refresh_interval&quot;</span> : <span class="hljs-string">&quot;5s&quot;</span>,<br><br>    <span class="hljs-attr">&quot;number_of_shards&quot;</span>: <span class="hljs-number">1</span><br><br>  &#125;,<br><br>  <span class="hljs-attr">&quot;mappings&quot;</span> : &#123;<br><br>    <span class="hljs-attr">&quot;_doc&quot;</span> : &#123;<br><br>      <span class="hljs-attr">&quot;dynamic_templates&quot;</span> : [ &#123;<br><br>        <span class="hljs-attr">&quot;message_field&quot;</span> : &#123;<br><br>          <span class="hljs-attr">&quot;path_match&quot;</span> : <span class="hljs-string">&quot;message&quot;</span>,<br><br>          <span class="hljs-attr">&quot;match_mapping_type&quot;</span> : <span class="hljs-string">&quot;string&quot;</span>,<br><br>          <span class="hljs-attr">&quot;mapping&quot;</span> : &#123;<br><br>            <span class="hljs-attr">&quot;type&quot;</span> : <span class="hljs-string">&quot;text&quot;</span>,<br><br>            <span class="hljs-attr">&quot;norms&quot;</span> : <span class="hljs-literal">false</span><br><br>          &#125;<br><br>        &#125;<br><br>      &#125;, &#123;<br><br>        <span class="hljs-attr">&quot;string_fields&quot;</span> : &#123;<br><br>          <span class="hljs-attr">&quot;match&quot;</span> : <span class="hljs-string">&quot;*&quot;</span>,<br><br>          <span class="hljs-attr">&quot;match_mapping_type&quot;</span> : <span class="hljs-string">&quot;string&quot;</span>,<br><br>          <span class="hljs-attr">&quot;mapping&quot;</span> : &#123;<br><br>            <span class="hljs-attr">&quot;type&quot;</span> : <span class="hljs-string">&quot;text&quot;</span>, <span class="hljs-attr">&quot;norms&quot;</span> : <span class="hljs-literal">false</span>,<br><br>            <span class="hljs-attr">&quot;fields&quot;</span> : &#123;<br><br>              <span class="hljs-attr">&quot;keyword&quot;</span> : &#123; <span class="hljs-attr">&quot;type&quot;</span>: <span class="hljs-string">&quot;keyword&quot;</span>, <span class="hljs-attr">&quot;ignore_above&quot;</span>: <span class="hljs-number">2048</span> &#125;<br><br>            &#125;<br><br>          &#125;<br><br>        &#125;<br><br>      &#125; ],<br><br>      <span class="hljs-attr">&quot;properties&quot;</span> : &#123;<br><br>        <span class="hljs-attr">&quot;@timestamp&quot;</span>: &#123; <span class="hljs-attr">&quot;type&quot;</span>: <span class="hljs-string">&quot;date&quot;</span>&#125;,<br><br>        <span class="hljs-attr">&quot;@version&quot;</span>: &#123; <span class="hljs-attr">&quot;type&quot;</span>: <span class="hljs-string">&quot;keyword&quot;</span>&#125;,<br><br>        <span class="hljs-attr">&quot;geoip&quot;</span>  : &#123;<br><br>          <span class="hljs-attr">&quot;dynamic&quot;</span>: <span class="hljs-literal">true</span>,<br><br>          <span class="hljs-attr">&quot;properties&quot;</span> : &#123;<br><br>            <span class="hljs-attr">&quot;ip&quot;</span>: &#123; <span class="hljs-attr">&quot;type&quot;</span>: <span class="hljs-string">&quot;ip&quot;</span> &#125;,<br><br>            <span class="hljs-attr">&quot;location&quot;</span> : &#123; <span class="hljs-attr">&quot;type&quot;</span> : <span class="hljs-string">&quot;geo_point&quot;</span> &#125;,<br><br>            <span class="hljs-attr">&quot;latitude&quot;</span> : &#123; <span class="hljs-attr">&quot;type&quot;</span> : <span class="hljs-string">&quot;half_float&quot;</span> &#125;,<br><br>            <span class="hljs-attr">&quot;longitude&quot;</span> : &#123; <span class="hljs-attr">&quot;type&quot;</span> : <span class="hljs-string">&quot;half_float&quot;</span> &#125;<br><br>          &#125;<br><br>        &#125;<br><br>      &#125;<br><br>    &#125;<br><br>  &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure>
<p>编写conf配置文件</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><code class="hljs dart">input &#123;<br>  beats &#123;<br>    port =&gt; <span class="hljs-number">5044</span><br>  &#125;<br>&#125;<br><br><br>filter &#123;<br>  <span class="hljs-keyword">if</span> [fields][document_type] == <span class="hljs-string">&quot;nginx_access_log&quot;</span> &#123;<br>    mutate &#123;<br>      gsub =&gt; [<span class="hljs-string">&quot;message&quot;</span>, <span class="hljs-string">&quot;\\x&quot;</span>, <span class="hljs-string">&quot;\\\x&quot;</span>]<br>    &#125;<br>    json &#123;<br>      source =&gt; <span class="hljs-string">&quot;message&quot;</span><br>    &#125;<br><br><br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;-&quot;</span> <span class="hljs-keyword">in</span> [upstream_response_time] &#123;<br>      mutate &#123;<br>        replace =&gt; &#123;<br>          <span class="hljs-string">&quot;upstream_response_time&quot;</span> =&gt; <span class="hljs-string">&quot;0&quot;</span><br>        &#125;<br>      &#125;<br>    &#125;<br><br>    mutate &#123;<br>      convert =&gt; [ <span class="hljs-string">&quot;upstream_response_time&quot;</span>, <span class="hljs-string">&quot;float&quot;</span> ]<br>    &#125;<br>    mutate &#123;<br>      gsub =&gt; [<br>        <span class="hljs-string">&quot;cookie&quot;</span>, <span class="hljs-string">&quot;\\x22&quot;</span>, <span class="hljs-string">&#x27;&quot;&#x27;</span><br>      ]<br>      gsub =&gt; [<br>        <span class="hljs-string">&quot;cookie&quot;</span>, <span class="hljs-string">&quot;\\x0A&quot;</span>, <span class="hljs-string">&quot;\n&quot;</span><br>      ]<br>    &#125;<br>  &#125;<br> &#125;<br><br><br>output &#123;<br>  <span class="hljs-keyword">if</span> [fields][document_type] == <span class="hljs-string">&quot;nginx_access_log&quot;</span> &#123;<br>  elasticsearch &#123;<br>    hosts =&gt; [<span class="hljs-string">&quot;192.168.1.30:9200&quot;</span>]<br>    index =&gt; <span class="hljs-string">&#x27;nginx-%&#123;+YYYY-MM-dd&#125;&#x27;</span><br>    template =&gt; <span class="hljs-string">&quot;/opt/logstash-6.5.3/config/template_nginxlog.json&quot;</span><br>    #template_name =&gt; <span class="hljs-string">&quot;nginxlog&quot;</span><br>    template_overwrite =&gt; <span class="hljs-keyword">true</span><br>    document_type =&gt; <span class="hljs-string">&quot;_doc&quot;</span>   #es报错文件格式不匹配<br>    &#125;<br>  &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>
<p>es报错信息，文件格式不匹配</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><code class="hljs pgsql">failed <span class="hljs-keyword">to</span> put mappings <span class="hljs-keyword">on</span> indices [[[nginx<span class="hljs-number">-2020</span><span class="hljs-number">-11</span><span class="hljs-number">-18</span>/ueZB7rY1QPilUWjk3S9ykg]]], <span class="hljs-keyword">type</span> [doc]java.lang.IllegalArgumentException: Rejecting <span class="hljs-keyword">mapping</span> <span class="hljs-keyword">update</span> <span class="hljs-keyword">to</span> [nginx<span class="hljs-number">-2020</span><span class="hljs-number">-11</span><span class="hljs-number">-18</span>] <span class="hljs-keyword">as</span> the final <span class="hljs-keyword">mapping</span> would have more than <span class="hljs-number">1</span> <span class="hljs-keyword">type</span>: [_doc, doc]<br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Logstash</tag>
      </tags>
  </entry>
  <entry>
    <title>rancher流水线&lt;后端&gt;</title>
    <url>/2021/01/04/rancher%E6%B5%81%E6%B0%B4%E7%BA%BF-%E5%90%8E%E7%AB%AF/</url>
    <content><![CDATA[<h3 id="1、Pipeline授权设置"><a href="#1、Pipeline授权设置" class="headerlink" title="1、Pipeline授权设置"></a>1、Pipeline授权设置</h3><p>Gitlab版本需要在9以上，授权账号必须是项目的Maintainer（gitlab 8 里面是master）,在gitlab中创建application，callbackurl在rancher上复制</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20191214193027408.png" alt="image-20191214193027408"></p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20191214193138485.png" alt="image-20191214193138485"></p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20191214193217867.png" alt="image-20191214193217867"></p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20191214193509071.png" alt="image-20191214193509071"></p>
<p>生成需要的ID和Key</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20191214193835277.png" alt="image-20191214193835277"></p>
<p>将刚才生成的ID和Key填入，地址输入自己gitlab的URL</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20191214193949412.png" alt="image-20191214193949412"></p>
<p>授权完成后，给流水线的运行设置资源限制</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20191214194027442.png" alt="image-20191214194027442"></p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20191214194108099.png" alt="image-20191214194108099"></p>
<h3 id="2、配置流水线"><a href="#2、配置流水线" class="headerlink" title="2、配置流水线"></a>2、配置流水线</h3><p>现在就可以开始设置流水线了，先设置代码库，开启需要运行的代码库</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20191214194230120.png" alt="image-20191214194230120"></p>
<p>设置什么条件可以触发流水线</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20191214194305401.png" alt="image-20191214194305401"></p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20191214194325948.png" alt="image-20191214194325948"></p>
<p>开始配置流水线流程，选择你需要配置的分支</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20191214194356585.png" alt="image-20191214194356585"></p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20191214194421735.png" alt="image-20191214194421735"></p>
<h3 id="3、流水线配置"><a href="#3、流水线配置" class="headerlink" title="3、流水线配置"></a>3、流水线配置</h3><p>第一步是系统已经设定好的，我们只需要根据自己的需要设置后面的步骤</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20191214194540875.png" alt="image-20191214194540875"></p>
<p>第二步 build，选择的类型是运行脚本，执行mvn clean package命令，选用的镜像是我自己打包maven3.6镜像。  公司有自己的maven私服，那么打包maven镜像的时候，可以设置好setting.xml文件，上传到前面配置的harbor仓库就可以了。如果不知道setting文件放到mvn镜像中的位置，就先运行 mvn  -X查看mvn读取配置文件的顺序，再把setting文件copy进去即可</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20191214194705581.png" alt="image-20191214194705581"></p>
<p>这一步主要是用build构建后的包，根据代码中的Dockerfile打包成镜像，当前目录依然是git  clone后的目录，指定Dockerfile的相对位置，并命名打包后的惊醒名，其中镜像名中的:${CICD_GIT_COMMIT}是rancher提供的变量。这里Dockerfile路径和构建上下文路径是gitlab库中的dockerfile文件的路径。</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20191214194801709.png" alt="image-20191214194801709"></p>
<p>下面讲下dockerfile的配置：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">FROM</span> <span class="hljs-selector-tag">registry</span><span class="hljs-selector-class">.hello</span><span class="hljs-selector-class">.com</span>/<span class="hljs-selector-tag">jdk</span><span class="hljs-selector-pseudo">:1.8_232</span>    #这里是我私仓自己的<span class="hljs-selector-tag">jdk</span>镜像<br><br><span class="hljs-selector-tag">ADD</span> ./<span class="hljs-selector-tag">target</span>/<span class="hljs-selector-tag">app</span><span class="hljs-selector-class">.jar</span>  <span class="hljs-selector-tag">app</span><span class="hljs-selector-class">.jar</span><br><br><span class="hljs-selector-tag">CMD</span>  <span class="hljs-selector-attr">[<span class="hljs-string">&quot;java  -jar app.jar  -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap&quot;</span>]</span><br></code></pre></td></tr></table></figure>
<p>最后一步部署Deployment.yaml文件，yaml路径是你gitlab仓库中项目下的路径</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20191214194824641.png" alt="image-20191214194824641"></p>
<p>保存完成后就可以看到正在构建了</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20191214195024989.png" alt="image-20191214195024989"></p>
<p>全部运行成功后，就可以在工作负载看到pod的运行状态</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20191214195120170.png" alt="image-20191214195120170"></p>
]]></content>
      <categories>
        <category>rancher</category>
      </categories>
      <tags>
        <tag>rancher</tag>
      </tags>
  </entry>
  <entry>
    <title>sonarqube使用钉钉告警</title>
    <url>/2021/01/05/sonarqube%E4%BD%BF%E7%94%A8%E9%92%89%E9%92%89%E5%91%8A%E8%AD%A6/</url>
    <content><![CDATA[<p>说明：因项目需求，创建的是一个Jenkins自由项目，需要sonar代码扫描通过再继续maven构建、并且不发送钉钉告警，扫描不通过则停止构建、并发送钉钉告警。</p>
<h3 id="1、安装告警插件"><a href="#1、安装告警插件" class="headerlink" title="1、安装告警插件"></a>1、安装告警插件</h3><p>#下载release包 /releases/dingding-sonar-1.0-SNAPSHOT.jar</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">wget https:<span class="hljs-regexp">//gi</span>tee.com<span class="hljs-regexp">/chejiangyi/</span>dingding-sonar<span class="hljs-regexp">/repository/</span>archive/master.zip<br><br>unzip master.zip<br></code></pre></td></tr></table></figure>
<p>#运行jar包 sonar.url为sonar安装地址</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> dingding-sonar/releases<br></code></pre></td></tr></table></figure>
<p>#启动服务</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">nohup</span> java -jar dingding-sonar-<span class="hljs-number">1</span>.<span class="hljs-number">0</span>-SNAPSHOT.jar \ --server.port=<span class="hljs-number">8082</span> \ --sonar.url=http://<span class="hljs-number">192.168.0.129:9000</span> \ &gt; /dev/null <span class="hljs-number">2</span> &gt;&amp; <span class="hljs-number">1</span> &amp;<br></code></pre></td></tr></table></figure>
<p>#检查部署成功 sonar-project-id 为sonar的项目id:task-dev</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><code class="hljs groovy">curl <span class="hljs-attr">http:</span><span class="hljs-comment">//&lt;your dingding-sonar-server IP&gt;:8082/?projectname=&#123;sonar-project-id&#125;</span><br></code></pre></td></tr></table></figure>
<p>#返回结果</p>
<p>bug:0,漏洞:0,坏味道:58,覆盖率:0.0,重复:0.0,状态:OK</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20200305135649539.png" alt="image-20200305135649539"></p>
<h3 id="2、发送告警通知"><a href="#2、发送告警通知" class="headerlink" title="2、发送告警通知"></a>2、发送告警通知</h3><p>钉钉通知发布脚本内容示例：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment">#!/bin/bash</span><br>projectName=task<span class="hljs-literal">-dev</span><br>projectId=task<span class="hljs-literal">-dev</span><br>dingdingToken=a9c7f0dff01a01cefda6af09e5d0ec068a55d755008c2f559ec2598e9f377djl    <span class="hljs-comment">#钉钉群组创建一个自由的webhook的token</span><br>sonarreport=<span class="hljs-variable">$</span>(<span class="hljs-built_in">curl</span> <span class="hljs-literal">-s</span> http://<span class="hljs-number">192.168</span>.<span class="hljs-number">0.121</span>:<span class="hljs-number">8082</span>/?projectname=<span class="hljs-variable">$</span>&#123;projectName&#125;)<br>sonar=<span class="hljs-variable">$</span>(<span class="hljs-built_in">curl</span> <span class="hljs-literal">-s</span> http://<span class="hljs-number">192.168</span>.<span class="hljs-number">0.121</span>:<span class="hljs-number">8082</span>/?projectname=task<span class="hljs-literal">-dev</span> |awk <span class="hljs-operator">-F</span> <span class="hljs-string">&quot;:&quot;</span> <span class="hljs-string">&#x27;&#123;print $7&#125;&#x27;</span>|<span class="hljs-built_in">tee</span> dev.txt)<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$sonar</span>&quot;</span><br><span class="hljs-keyword">if</span> [[ <span class="hljs-string">&quot;<span class="hljs-variable">$sonar</span>&quot;</span> == <span class="hljs-string">&quot;ERROR&quot;</span> ]]<br>then<br>  <span class="hljs-built_in">echo</span> <span class="hljs-variable">$</span>&#123;sonarreport&#125;<br>  <span class="hljs-built_in">curl</span> <span class="hljs-literal">-s</span> <span class="hljs-string">&quot;https://oapi.dingtalk.com/robot/send?access_token=<span class="hljs-variable">$</span>&#123;dingdingToken&#125;&quot;</span> <span class="hljs-literal">-H</span> <span class="hljs-string">&quot;Content-Type: application/json&quot;</span>  <span class="hljs-literal">-d</span> <span class="hljs-string">&quot;&#123; \&quot;</span>msgtype\<span class="hljs-string">&quot;: \&quot;</span>markdown\<span class="hljs-string">&quot;, \&quot;</span>markdown\<span class="hljs-string">&quot;: &#123; \&quot;</span>title\<span class="hljs-string">&quot;:\&quot;</span>sonar代码<br>质量\<span class="hljs-string">&quot;, \&quot;</span>text\<span class="hljs-string">&quot;: \&quot;</span><span class="hljs-comment">## Sonar代码质量报告 \n</span><br>&gt;<span class="hljs-variable">$</span>&#123;projectName&#125; \n<br>&gt; [<span class="hljs-type">sonar</span>地址](http://<span class="hljs-number">192.168</span>.<span class="hljs-number">0.129</span>:<span class="hljs-number">9000</span>/dashboard?id=<span class="hljs-variable">$</span>&#123;projectId&#125;) \n<br>&gt; <span class="hljs-variable">$</span>&#123;sonarreport&#125; \n\<span class="hljs-string">&quot;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string">&#125;&quot;</span><br>  <span class="hljs-keyword">exit</span> <span class="hljs-number">1</span><br><span class="hljs-keyword">else</span><br>  <span class="hljs-built_in">echo</span> <span class="hljs-variable">$</span>&#123;sonarreport&#125;<br>fi<br></code></pre></td></tr></table></figure>
<p>参考文章：<a href="https://www.cnblogs.com/chejiangyi/p/10844232.html">https://www.cnblogs.com/chejiangyi/p/10844232.html</a></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>SonarQube</tag>
      </tags>
  </entry>
  <entry>
    <title>二进制安装mariadb主从复制</title>
    <url>/2021/01/05/%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AE%89%E8%A3%85mariadb%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/</url>
    <content><![CDATA[<p>官网地址：<a href="https://mariadb.com/downloads">https://mariadb.com/downloads</a></p>
<h3 id="1、安装MariaDB"><a href="#1、安装MariaDB" class="headerlink" title="1、安装MariaDB"></a>1、安装MariaDB</h3><figure class="highlight apache"><table><tr><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">tar</span> xvf mariadb-<span class="hljs-number">10</span>.<span class="hljs-number">4</span>.<span class="hljs-number">12</span>-linux-x<span class="hljs-number">86</span>_<span class="hljs-number">64</span>.tar.gz -C /usr/local/<br><span class="hljs-attribute">cd</span> /usr/local<br><span class="hljs-attribute">ln</span> -s mariadb-<span class="hljs-number">10</span>.<span class="hljs-number">4</span>.<span class="hljs-number">12</span>-linux-x<span class="hljs-number">86</span>_<span class="hljs-number">64</span> mysql<br><span class="hljs-attribute">groupadd</span> mysql<br><span class="hljs-attribute">useradd</span> -g mysql mysql<br></code></pre></td></tr></table></figure>
<p>创建数据目录</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">mkdir -p <span class="hljs-regexp">/data/my</span>sql/data<br>chown -R mysql.mysql <span class="hljs-regexp">/data/</span><br>chown -R mysql.mysql <span class="hljs-regexp">/usr/</span>local/mysql<br></code></pre></td></tr></table></figure>
<h3 id="2、安装配置"><a href="#2、安装配置" class="headerlink" title="2、安装配置"></a>2、安装配置</h3><figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">cd <span class="hljs-regexp">/usr/</span>local/mysql<br>.<span class="hljs-regexp">/scripts/my</span>sql_install_db --user=mysql --datadir=<span class="hljs-regexp">/data/my</span>sql/data    <span class="hljs-comment">#执行配置脚本</span><br></code></pre></td></tr></table></figure>
<p>修改/etc/my.cnf中的配置<master></p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><code class="hljs routeros">[mysqld]<br>slow_query_log = 1       #开启慢日志<br>slow_query_log_file = <span class="hljs-string">&quot;/data/log/mariadb/mariadb-slow.log&quot;</span>     #慢日志存放目录<br>long_query_time = 2      #查询时间超过 2 秒则定义为慢查询<br><span class="hljs-attribute">bind-address</span>=0.0.0.0     #一般建议全部绑定，因为 mysql 和 mariadb 不允许手动绑定指定<span class="hljs-built_in"> IP </span>地址<br>port = 3306<br>datadir = <span class="hljs-string">&quot;/data/mysql/data&quot;</span>     #后期同步的二进制修改信息会放在这里<br>log_error = <span class="hljs-string">&quot;/data/log/mariadb/error.log&quot;</span><br>socket = <span class="hljs-string">&quot;/var/lib/mysql/mysql.sock&quot;</span>         #用于支持本地访问的 socket 文件<br><span class="hljs-attribute">server-id</span>=1              #配置本机 mysql 的唯一 ID，多台 mysql 不能存在相同的 ID<br><span class="hljs-attribute">log-bin</span>=master-bin        #设置”主服务器需要同步的二进制日志”文件名前缀<br><span class="hljs-attribute">relay-log</span>=mysql-relay-bin   #设置”从服务器需要执行的中继日志”文件名前缀<br><span class="hljs-attribute">binlog_format</span>=row           #修改了复制格式为 mixed，mysql 一共有三种格式 mixed 和 statement 和 row ，默认是 row<br>expire_logs_days = 3        #设置”二进制修改信息”的保存时间，过期（三天后）清理<br><span class="hljs-attribute">autocommit</span>=0<br><span class="hljs-attribute">character_set_server</span>=utf8mb4<br><span class="hljs-attribute">collation_server</span>=utf8mb4_bin<br><span class="hljs-attribute">explicit_defaults_for_timestamp</span>=1<br><span class="hljs-attribute">transaction_isolation</span>=READ-COMMITTED<br><span class="hljs-attribute">tmp_table_size</span>=64M<br><span class="hljs-attribute">interactive_timeout</span>=1800<br><span class="hljs-attribute">wait_timeout</span>=1800<br><span class="hljs-attribute">max_connections</span>=200<br><span class="hljs-attribute">max_allowed_packet</span>=32M<br><span class="hljs-attribute">read_rnd_buffer_size</span>=8M<br><span class="hljs-attribute">sort_buffer_size</span>=8M<br><span class="hljs-attribute">join_buffer_size</span>=8M<br><span class="hljs-attribute">binlog_cache_size</span>=4M<br><span class="hljs-attribute">innodb_log_buffer_size</span>=16M<br><span class="hljs-attribute">innodb_flush_log_at_trx_commit</span>=1<br><span class="hljs-attribute">innodb_sort_buffer_size</span>=64M<br><span class="hljs-attribute">innodb_log_file_size</span>=512M<br><span class="hljs-attribute">innodb_print_all_deadlocks</span>=1<br><span class="hljs-attribute">innodb_buffer_pool_size</span>=【物理内存*0.6】<br><span class="hljs-attribute">lower_case_table_names</span>=1            #关闭大小写敏感<br>default-time_zone = <span class="hljs-string">&#x27;+8:00&#x27;</span><br><br>并添加如下配置：<br>[client]<br><span class="hljs-attribute">default-character-set</span>=utf8mb4<br></code></pre></td></tr></table></figure>
<p>修改/etc/my.cnf中的配置<slave></p>
<figure class="highlight ini"><table><tr><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[mysqld]</span><br><span class="hljs-attr">port</span> = <span class="hljs-number">3306</span><br><span class="hljs-attr">server-id</span>=<span class="hljs-number">2</span><br><span class="hljs-attr">log-bin</span>=slave-bin<br></code></pre></td></tr></table></figure>
<h3 id="3、启动数据库"><a href="#3、启动数据库" class="headerlink" title="3、启动数据库"></a>3、启动数据库</h3><figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">.<span class="hljs-regexp">/bin/my</span>sqld_safe --user=mysql --datadir=<span class="hljs-regexp">/data/my</span>sql/data &amp;<br>ln -s <span class="hljs-regexp">/var/</span>lib<span class="hljs-regexp">/mysql/my</span>sql.sock <span class="hljs-regexp">/tmp/my</span>sql.sock<br></code></pre></td></tr></table></figure>
<p>设置数据库root用户密码</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">.<span class="hljs-regexp">/bin/my</span>sqladmin -u root password <span class="hljs-string">&#x27;123456&#x27;</span>       <span class="hljs-comment">#设置root用户密码</span><br></code></pre></td></tr></table></figure>
<p>关闭数据库</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">.<span class="hljs-regexp">/bin/my</span>sqladmin -uroot -p shutdown<br></code></pre></td></tr></table></figure>
<h3 id="4、数据库连接、查询"><a href="#4、数据库连接、查询" class="headerlink" title="4、数据库连接、查询"></a>4、数据库连接、查询</h3><figure class="highlight pgsql"><table><tr><td class="code"><pre><code class="hljs pgsql">./bin/mysql -uroot -p<br><span class="hljs-keyword">select</span> host,<span class="hljs-keyword">user</span>,<span class="hljs-keyword">password</span> <span class="hljs-keyword">from</span> <span class="hljs-keyword">user</span>;<br><span class="hljs-keyword">GRANT</span> <span class="hljs-keyword">ALL</span> <span class="hljs-keyword">PRIVILEGES</span> <span class="hljs-keyword">ON</span> *.* <span class="hljs-keyword">TO</span> <span class="hljs-string">&#x27;root&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span> IDENTIFIED <span class="hljs-keyword">BY</span> <span class="hljs-string">&#x27;econage123&#x27;</span> <span class="hljs-keyword">WITH</span> <span class="hljs-keyword">GRANT</span> <span class="hljs-keyword">OPTION</span>;<br>FLUSH <span class="hljs-keyword">PRIVILEGES</span>;<br></code></pre></td></tr></table></figure>
<h3 id="5、创建主从连接的用户"><a href="#5、创建主从连接的用户" class="headerlink" title="5、创建主从连接的用户"></a>5、创建主从连接的用户<master></h3><figure class="highlight pgsql"><table><tr><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">user</span> <span class="hljs-string">&#x27;admin&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span> identified <span class="hljs-keyword">by</span> <span class="hljs-string">&#x27;admin123&#x27;</span>;<br><span class="hljs-keyword">grant</span> <span class="hljs-keyword">replication</span> slave <span class="hljs-keyword">on</span> *.* <span class="hljs-keyword">to</span> <span class="hljs-string">&#x27;admin&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span>;<br>FLUSH <span class="hljs-keyword">PRIVILEGES</span>;<br><span class="hljs-keyword">show</span> master status;<br></code></pre></td></tr></table></figure>
<h3 id="6、进行关联master节点"><a href="#6、进行关联master节点" class="headerlink" title="6、进行关联master节点"></a>6、进行关联master节点<slave></h3><figure class="highlight routeros"><table><tr><td class="code"><pre><code class="hljs routeros">CHANGE MASTER <span class="hljs-keyword">TO</span><br>  <span class="hljs-attribute">MASTER_HOST</span>=<span class="hljs-string">&#x27;172.18.103.211&#x27;</span>,<br>  <span class="hljs-attribute">MASTER_USER</span>=<span class="hljs-string">&#x27;econage&#x27;</span>,<br>  <span class="hljs-attribute">MASTER_PASSWORD</span>=<span class="hljs-string">&#x27;econage&#x27;</span>,<br>  <span class="hljs-attribute">MASTER_PORT</span>=3306,<br>  <span class="hljs-attribute">MASTER_LOG_FILE</span>=<span class="hljs-string">&#x27;mysql-bin.000003&#x27;</span>,<br>  <span class="hljs-attribute">MASTER_LOG_POS</span>=1552;<br></code></pre></td></tr></table></figure>
<p>最后输入命令 show slave status\G 查看状态。（写 \G 是换行）</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20200408164002241.png" alt="image-20200408164002241"></p>
<p>如果状态没有同步</p>
<figure class="highlight crmsh"><table><tr><td class="code"><pre><code class="hljs crmsh"><span class="hljs-literal">stop</span>  <span class="hljs-literal">slave</span>;<br><span class="hljs-literal">start</span>  <span class="hljs-literal">slave</span>;<br>show <span class="hljs-literal">slave</span> status\G<br></code></pre></td></tr></table></figure>
<p>参考文章：<a href="https://www.landui.com/help/show-9902.html">https://www.landui.com/help/show-9902.html</a></p>
<p>​                    <a href="https://blog.csdn.net/yhld456/article/details/89020979">https://blog.csdn.net/yhld456/article/details/89020979</a></p>
]]></content>
      <categories>
        <category>关系型数据库</category>
      </categories>
      <tags>
        <tag>Mariadb</tag>
      </tags>
  </entry>
  <entry>
    <title>安装Hexo个人博客</title>
    <url>/2020/12/30/%E5%AE%89%E8%A3%85Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h2 id="需要的工具"><a href="#需要的工具" class="headerlink" title="需要的工具"></a>需要的工具</h2><p>nodejs: 包含俩个命令 node<code> </code>npm</p>
<p>hexo: 快速、简洁且高效的博客框架,支持markdown 插件和扩展性很好</p>
<p>git：需要安装git 通过git 命令来操作github</p>
<p>github账号：申请注册一个github账号，github提供了一个github pages功能可以支持站点软件版本</p>
<h2 id="windows安装git"><a href="#windows安装git" class="headerlink" title="windows安装git"></a>windows安装git</h2><p>1、打开Git的官方网站：<a href="https://git-scm.com/">https://git-scm.com/</a></p>
<p>2、找到下载页：<a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a></p>
<p>3、找到Windows版本下载页面：<a href="https://git-scm.com/download/win">https://git-scm.com/download/win</a></p>
<h2 id="windows安装nodejs"><a href="#windows安装nodejs" class="headerlink" title="windows安装nodejs"></a>windows安装nodejs</h2><p>官网下载地址：<a href="https://npm.taobao.org/mirrors/node/v14.15.3/node-v14.15.3-x64.msi">https://npm.taobao.org/mirrors/node/v14.15.3/node-v14.15.3-x64.msi</a></p>
<p>运行msi文件，按照提示一直走下去，安装完成后通过命令行检测结果</p>
<figure class="highlight coffeescript"><table><tr><td class="code"><pre><code class="hljs coffeescript"><span class="hljs-built_in">npm</span>  -v<br></code></pre></td></tr></table></figure>
<p>临时更换npm 源 (为了后面快速下载安装hexo，更换为国内的源)</p>
<figure class="highlight arduino"><table><tr><td class="code"><pre><code class="hljs arduino">npm <span class="hljs-built_in">config</span> <span class="hljs-built_in">set</span> registry https:<span class="hljs-comment">//registry.npm.taobao.org</span><br>npm <span class="hljs-built_in">config</span> <span class="hljs-built_in">get</span> registry<br><br>#看看终端显示信息，如果看到这行信息，说明配置成功: https:<span class="hljs-comment">//registry.npm.taobao.org/</span><br></code></pre></td></tr></table></figure>
<p>备注：按照系统默认安装，不要修改或设置config文件路径，否则会在安装hexo找不到命令</p>
<h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><h3 id="windows初始化hexo"><a href="#windows初始化hexo" class="headerlink" title="windows初始化hexo"></a>windows初始化hexo</h3><p>通过npm来安装hexo，下面前俩个命令安装需要一点时间，blog目录就是博客目录，根据自己情况选择目录</p>
<figure class="highlight mipsasm"><table><tr><td class="code"><pre><code class="hljs mipsasm">npm <span class="hljs-keyword">install </span>hexo-cli -g<br>hexo init <span class="hljs-keyword">blog</span><br><span class="hljs-keyword">cd </span><span class="hljs-keyword">blog</span><br><span class="hljs-keyword">npm </span><span class="hljs-keyword">install</span><br><span class="hljs-keyword">hexo </span>server<br></code></pre></td></tr></table></figure>
<p>终端显示如下：</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">INFO</span>  Validating config<br><span class="hljs-keyword">INFO</span>  <span class="hljs-keyword">Start</span> processing<br><span class="hljs-keyword">INFO</span>  Hexo <span class="hljs-keyword">is</span> running at http://localhost:<span class="hljs-number">4000</span> . Press Ctrl+C <span class="hljs-keyword">to</span> stop.<br></code></pre></td></tr></table></figure>
<p>在本地浏览器访问<a href="http://localhost:4000/">http://localhost:4000</a></p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20201228134458558-1609204893841.png" alt="image-20201228134458558"></p>
<h2 id="Github准备"><a href="#Github准备" class="headerlink" title="Github准备"></a>Github准备</h2><p>1、注册账号并登录 <a href="https://github.com/">https://github.com</a></p>
<p>2、新建一个仓库</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20201228135107663-1609204887387.png" alt="image-20201228135107663"></p>
<p><strong>注意： 创建repository之前，点击settings更改下默认仓库分支名字 由 main 改为master</strong></p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20201228140042861-1609204885284.png" alt="image-20201228140042861"></p>
<p>然后打开仓库创建一个 index.html 文件，并随意先写点内容，比如: 你能看到我 说明部署成功~</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20201228140248390-1609204879899.png" alt="image-20201228140248390"></p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20201228140336250.png" alt="image-20201228140336250"></p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20201228140351507-1609204877084.png" alt="image-20201228140351507"></p>
<p>现在打开http://[用户名].github.io就能看到自己的站点了</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20201228140625169-1609204875332.png" alt="image-20201228140625169"></p>
<h2 id="配置SSH-key"><a href="#配置SSH-key" class="headerlink" title="配置SSH  key"></a>配置SSH  key</h2><p>执行以下命令全局配置一下本地账户</p>
<figure class="highlight verilog"><table><tr><td class="code"><pre><code class="hljs verilog">git <span class="hljs-keyword">config</span> --<span class="hljs-keyword">global</span> user<span class="hljs-variable">.name</span> <span class="hljs-string">&quot;用户名&quot;</span><br>git <span class="hljs-keyword">config</span> --<span class="hljs-keyword">global</span> user<span class="hljs-variable">.email</span> <span class="hljs-string">&quot;邮箱地址&quot;</span><br></code></pre></td></tr></table></figure>
<p>生成一对密钥 SSH key</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">ssh-keygen -t rsa</span><br></code></pre></td></tr></table></figure>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20201228141002999-1609204872669.png" alt="image-20201228141002999"></p>
<p>然后登录github 在github 上添加刚刚生成的ssh key 把公钥复制粘贴上去</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20201228145139217-1609204870370.png" alt="image-20201228145139217"></p>
<p>创建一个新的 SSH key, 标题随便，key 就填刚才生成那个，确认创建，搞定！！这样在你的 SSH keys 列表里就会看到你刚刚添加的密钥</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20201228145222267-1609204868175.png" alt="image-20201228145222267"></p>
<p>首次使用还需要确认并添加主机到本机ssh 信任列表 下面可以看到success 返回成功</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20201228145421096-1609204866268.png" alt="image-20201228145421096"></p>
<h2 id="将hexo部署到github仓库"><a href="#将hexo部署到github仓库" class="headerlink" title="将hexo部署到github仓库"></a>将hexo部署到github仓库</h2><p>​        这个时候我们把本地hexo 和github pages部署已经完成了，接下来我们要把本地的hexo静态站点部署到github pages中，然后通过github pages 我们就可以在互联网上浏览到博客了。</p>
<h3 id="部署之前需要更改hexo-配置-和安装部署插件"><a href="#部署之前需要更改hexo-配置-和安装部署插件" class="headerlink" title="部署之前需要更改hexo 配置 和安装部署插件"></a>部署之前需要更改hexo 配置 和安装部署插件</h3><p>第一: 进入blog 目录，打开仓库_config.yml 配置文件，拉到文件末尾，填上如下配置（也可同时部署到多个仓库，比如也可以支持gitee ）</p>
<figure class="highlight dts"><table><tr><td class="code"><pre><code class="hljs dts"><span class="hljs-meta"># Deployment</span><br><span class="hljs-meta">## Docs: https:<span class="hljs-comment">//hexo.io/docs/one-command-deployment</span></span><br><span class="hljs-symbol">deploy:</span><br><span class="hljs-symbol">  type:</span> git<br><span class="hljs-symbol">  branch:</span> master<br><span class="hljs-symbol">  repo:</span><br><span class="hljs-symbol">    github:</span> git@github.com:yangpiqiulaotou/yangpiqiulaotou.github.io.git <span class="hljs-meta">#仓库名字改成自己的</span><br></code></pre></td></tr></table></figure>
<p>第二: 要安装一个部署插件 <a href="https://github.com/hexojs/hexo-deployer-git">hexo-deployer-git</a></p>
<figure class="highlight ada"><table><tr><td class="code"><pre><code class="hljs ada">npm install hexo-deployer-git <span class="hljs-comment">--save</span><br></code></pre></td></tr></table></figure>
<p>第三: 最后执行以下命令就可以部署上传啦，以下 g 是 generate 缩写，d 是 deploy 缩写：</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo g -d</span><br></code></pre></td></tr></table></figure>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20201228150622519-1609204863417.png" alt="image-20201228150622519"></p>
<p>稍等一会，在浏览器访问网址： <a href="https://你的用户名.github.io/">https://你的用户名.github.io</a> 就会看到你的博客</p>
<h4 id="hexo-命令"><a href="#hexo-命令" class="headerlink" title="hexo 命令"></a>hexo 命令</h4><table>
<thead>
<tr>
<th>命令</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>hexo clean</td>
<td>清除所有生成的页面文件</td>
</tr>
<tr>
<td>hexo g</td>
<td>生成页面</td>
</tr>
<tr>
<td>hexo deploy</td>
<td>推送部署到远程服务器</td>
</tr>
<tr>
<td>hexo n xxx</td>
<td>新建一篇名为xxx的文章</td>
</tr>
</tbody></table>
<h4 id="命令行测试发布博客"><a href="#命令行测试发布博客" class="headerlink" title="命令行测试发布博客"></a>命令行测试发布博客</h4><p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20201228150806161-1609204859471.png" alt="image-20201228150806161"></p>
<p>编辑完成保存，然后进行发布，注意： 一定要在blog目录下执行命令，然后通过域名进行访问</p>
<figure class="highlight jboss-cli"><table><tr><td class="code"><pre><code class="hljs jboss-cli"><span class="hljs-keyword">cd</span> ~<span class="hljs-string">/blog</span><br>hexo clean &amp;&amp; hexo g -d<br></code></pre></td></tr></table></figure>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20201228170456678-1609204857122.png" alt="image-20201228170456678"></p>
<h2 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h2><p>主题官网：<a href="https://hexo.io/themes/">https://hexo.io/themes/</a></p>
<figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">cd ~/blog<br>git@github.com:fluid-dev<span class="hljs-regexp">/hexo-theme-fluid.git themes/</span>fluid<br></code></pre></td></tr></table></figure>
<p>在_config.yml 配置文件中，替换theme 参数，我们 把原来的注释掉加#，然后新增一行theme:  next</p>
<figure class="highlight avrasm"><table><tr><td class="code"><pre><code class="hljs avrasm"><span class="hljs-meta">#theme: landscape</span><br><span class="hljs-symbol">theme:</span> fluid  <span class="hljs-meta"># 指定主题</span><br><br><span class="hljs-symbol">language:</span> <span class="hljs-built_in">zh</span>-CN   <span class="hljs-meta">#修改为中文</span><br></code></pre></td></tr></table></figure>
<h3 id="配置主题fluid"><a href="#配置主题fluid" class="headerlink" title="配置主题fluid"></a>配置主题fluid</h3><p>fluid官网：<a href="https://hexo.fluid-dev.com/docs/guide/#%E8%A6%86%E7%9B%96%E9%85%8D%E7%BD%AE">https://hexo.fluid-dev.com/docs/guide/#%E8%A6%86%E7%9B%96%E9%85%8D%E7%BD%AE</a></p>
<p>根据官网修改自己的需求选项，比如博客名称、个人简介、自己狂拽酷帅吊炸天的昵称…</p>
<p>修改页面图片</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20201229150548121-1609225775674.png" alt="image-20201229150548121"></p>
<p>将自己选好的图片放到这个文件夹下，图片格式为xx.png类型，然后在主题下面的_config.yaml配置文件中修改图片名称，比如：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><code class="hljs css">/<span class="hljs-selector-tag">avatar</span><span class="hljs-selector-class">.png</span>     #然后改成<span class="hljs-selector-tag">ss</span><span class="hljs-selector-class">.png</span><br></code></pre></td></tr></table></figure>
<p>新建about 关于页面</p>
<figure class="highlight haxe"><table><tr><td class="code"><pre><code class="hljs haxe">hexo <span class="hljs-keyword">new</span> <span class="hljs-type">page</span> about<br></code></pre></td></tr></table></figure>
<p>更新到github</p>
<figure class="highlight 1c"><table><tr><td class="code"><pre><code class="hljs 1c">hexo clean <span class="hljs-meta">&amp;&amp; hexo g -d</span><br></code></pre></td></tr></table></figure>
<p>最后效果图</p>
<p><img src="https://gitee.com/jianshen-bao/blog-img/raw/master/img/image-20201229150931869.png" alt="image-20201229150931869"></p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
</search>
